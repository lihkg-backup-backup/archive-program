{"tid":563847,"cid":26,"subCid":0,"title":"reduce() and closures in JavaScript illustrated......","createTime":"2018-02-17T10:34:21.000Z","updateTime":"2018-02-23T14:58:57.000Z","uid":33883,"like":1,"dislike":4,"uniUserReply":9,"replies":[{"pid":"a5a762813910b028ea5b36cb3809e5d577a4ef82","tid":563847,"uid":33883,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T10:34:21.000Z","msg":"reduce() method, i.e. Array.prototype.reduce() can be used on an integer array or an object array like exemplified below:<br />\n<img src=\"https://image.ibb.co/kZBc0n/reduce_method_in_js.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2FkZBc0n%2Freduce_method_in_js.jpg&h=b1d56a8e&s={SIZE}\" /><br />\n<br />\nAs explained by Kyle Simpson(the author of the famous &quot;You Don't Know JS&quot; book series), <em>closure is when a function is able to remember and access its lexical scope even when that function is executing outside its lexical scope</em>. In other words, closures are <strong>exposed nested functions</strong> which can access the scope of their parent even if we call them from the outside. Let use the example below to illustrate his point:<br />\n<img src=\"https://image.ibb.co/ew4amS/closure_with_reduce.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Few4amS%2Fclosure_with_reduce.jpg&h=3cb002fb&s={SIZE}\" /><br />\n<br />\nP.S. 似乎closures + reduce()呢個組合用嚟整啲shopping cart嘅functions都幾fit喎! <img src=\"/assets/faces/normal/tongue.gif\" class=\"hkgmoji\" />"},{"pid":"e09925becd910b63cb7ab8db1c3f316fb39989c5","tid":563847,"uid":53524,"like":1,"dislike":1,"score":0,"citedBy":1,"replyTime":"2018-02-17T11:24:16.000Z","msg":"唔識JS, 寫左個OO版交流下<img src=\"/assets/faces/normal/hoho.gif\" class=\"hkgmoji\" /> <br />\n&lt;class Order&gt;<br />\ndefine calculateTotal(specialCharges : () =&gt; Integer ){<br />\n   total()<br />\n   addTax()<br />\n   foreach charge in specialCharges<br />\n       charge.charges()<br />\n}<br />\n<br />\norders.fold(0, (x,y) =&gt; x.calculateTotal() + y.calculateTotal())"},{"pid":"355442e28995fcafe3aeea429c795c7b23f2b588","tid":563847,"uid":33883,"like":1,"dislike":1,"score":0,"quote":{"pid":"a5a762813910b028ea5b36cb3809e5d577a4ef82","tid":563847,"uid":33883,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T10:34:21.000Z","msg":"reduce() method, i.e. Array.prototype.reduce() can be used on an integer array or an object array like exemplified below:<br />\n<img src=\"https://image.ibb.co/kZBc0n/reduce_method_in_js.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2FkZBc0n%2Freduce_method_in_js.jpg&h=b1d56a8e&s={SIZE}\" /><br />\n<br />\nAs explained by Kyle Simpson(the author of the famous &quot;You Don't Know JS&quot; book series), <em>closure is when a function is able to remember and access its lexical scope even when that function is executing outside its lexical scope</em>. In other words, closures are <strong>exposed nested functions</strong> which can access the scope of their parent even if we call them from the outside. Let use the example below to illustrate his point:<br />\n<img src=\"https://image.ibb.co/ew4amS/closure_with_reduce.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Few4amS%2Fclosure_with_reduce.jpg&h=3cb002fb&s={SIZE}\" /><br />\n<br />\nP.S. 似乎closures + reduce()呢個組合用嚟整啲shopping cart嘅functions都幾fit喎! <img src=\"/assets/faces/normal/tongue.gif\" class=\"hkgmoji\" />"},"citedBy":0,"replyTime":"2018-02-17T12:14:50.000Z","msg":"BTW, when using the reduce() method, i.e. arr.reduce(fallback[, initialValue]), be careful to <strong>always provide an initialValue</strong> (e.g. 0), though it is optional, otherwise you may encounter some unexpected results in some cases as illustrated below:<br />\n<img src=\"https://image.ibb.co/cc8CY7/reduce_without_initial_Value.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Fcc8CY7%2Freduce_without_initial_Value.jpg&h=5659ea15&s={SIZE}\" />"},{"pid":"8aab97c67cffc990504640d67d4a5f92c31d3945","tid":563847,"uid":33883,"like":1,"dislike":1,"score":0,"quote":{"pid":"e09925becd910b63cb7ab8db1c3f316fb39989c5","tid":563847,"uid":53524,"like":1,"dislike":1,"score":0,"citedBy":1,"replyTime":"2018-02-17T11:24:16.000Z","msg":"唔識JS, 寫左個OO版交流下<img src=\"/assets/faces/normal/hoho.gif\" class=\"hkgmoji\" /> <br />\n&lt;class Order&gt;<br />\ndefine calculateTotal(specialCharges : () =&gt; Integer ){<br />\n   total()<br />\n   addTax()<br />\n   foreach charge in specialCharges<br />\n       charge.charges()<br />\n}<br />\n<br />\norders.fold(0, (x,y) =&gt; x.calculateTotal() + y.calculateTotal())"},"citedBy":0,"replyTime":"2018-02-17T12:21:35.000Z","msg":"請問係邊隻OO language? 個&lt;class Order&gt;已經有埋orders.fold()? <img src=\"/assets/faces/normal/chicken.gif\" class=\"hkgmoji\" />"},{"pid":"0a22176f8c1ce19275193ad9034b196d3d6a46fc","tid":563847,"uid":33883,"like":2,"dislike":1,"score":1,"citedBy":0,"replyTime":"2018-02-17T12:24:19.000Z","msg":"<blockquote><blockquote>reduce() method, i.e. Array.prototype.reduce() can be used on an integer array or an object array like exemplified below:<br />\n<img src=\"https://image.ibb.co/kZBc0n/reduce_method_in_js.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2FkZBc0n%2Freduce_method_in_js.jpg&h=b1d56a8e&s={SIZE}\" /><br />\n<br />\nAs explained by Kyle Simpson(the author of the famous &quot;You Don't Know JS&quot; book series), <em>closure is when a function is able to remember and access its lexical scope even when that function is executing outside its lexical scope</em>. In other words, closures are <strong>exposed nested functions</strong> which can access the scope of their parent even if we call them from the outside. Let use the example below to illustrate his point:<br />\n<img src=\"https://image.ibb.co/ew4amS/closure_with_reduce.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Few4amS%2Fclosure_with_reduce.jpg&h=3cb002fb&s={SIZE}\" /><br />\n<br />\nP.S. 似乎closures + reduce()呢個組合用嚟整啲shopping cart嘅functions都幾fit喎! <img src=\"/assets/faces/normal/tongue.gif\" class=\"hkgmoji\" /></blockquote>BTW, when using the reduce() method, i.e. arr.reduce(<span style=\"color: red;\">callback</span>[, initialValue]), be careful to <strong>always provide an initialValue</strong> (e.g. 0), though it is optional, otherwise you may encounter some unexpected results in some cases as illustrated below:<br />\n<img src=\"https://image.ibb.co/cc8CY7/reduce_without_initial_Value.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Fcc8CY7%2Freduce_without_initial_Value.jpg&h=5659ea15&s={SIZE}\" /></blockquote>"},{"pid":"d0bce6c7ce0b9f2cfd429329493063f954abe57d","tid":563847,"uid":79869,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T14:27:55.000Z","msg":"講起reduce(), 其實有人講過js既implementation是錯的, reduce()應該要return一個array才是functional的做法"},{"pid":"2c646943b7f4e0f75f89b77e246aa81996aa0c82","tid":563847,"uid":33883,"like":2,"dislike":1,"score":1,"quote":{"pid":"d0bce6c7ce0b9f2cfd429329493063f954abe57d","tid":563847,"uid":79869,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T14:27:55.000Z","msg":"講起reduce(), 其實有人講過js既implementation是錯的, reduce()應該要return一個array才是functional的做法"},"citedBy":1,"replyTime":"2018-02-17T15:37:23.000Z","msg":"如果係有initialValue嘅, JS個reduce() method我又唔覺同Haskell(呢個pure functional language)個foldl function有乜分別, 大家都係return一個combined value, 唔係array喎:<br />\n<img src=\"https://image.ibb.co/dro7Y7/fold_in_Haskell.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Fdro7Y7%2Ffold_in_Haskell.jpg&h=b5cababb&s={SIZE}\" /><br />\n<br />\nBTW, Haskell's formal definition of <br />\n<span style=\"color: green;\">foldl               :: (b -&gt;a -&gt;b) -&gt; b -&gt; [a] -&gt; b<br />\nfoldl f v []       = v<br />\nfoldl f v (x:xs) = foldl f (f v x) xs</span><br />\n<br />\n<span style=\"color: blue;\">foldr               :: (a -&gt;b -&gt;b) -&gt; b -&gt; [a] -&gt; b<br />\nfoldr f v []       = v<br />\nfoldr f v (x:xs) = foldr f (f xs v) x</span><br />\n<br />\n反而覺得JS冇initialValue嘅reduce() method implementation會唔會係bug嚟呢?<img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" />"},{"pid":"158a42763cc1f34eda33f9a99ef57de0ef0c32e3","tid":563847,"uid":160368,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T15:40:06.000Z","msg":"想學好js 有無咩書岩睇？想advance d 講下architecture 同 concept 既<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />"},{"pid":"0a1c62593cf92d0adda1ac2ee615d0ebb8b83fff","tid":563847,"uid":33883,"like":2,"dislike":1,"score":1,"quote":{"pid":"158a42763cc1f34eda33f9a99ef57de0ef0c32e3","tid":563847,"uid":160368,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T15:40:06.000Z","msg":"想學好js 有無咩書岩睇？想advance d 講下architecture 同 concept 既<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />"},"citedBy":0,"replyTime":"2018-02-17T15:52:19.000Z","msg":"Concept就唔駛諗, 一定係Kyle Simpson's &quot;You Don't Know JS&quot; book series, 天書嚟!<br />\n<a href=\"https://github.com/getify/You-Dont-Know-JS\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fgithub.com%2Fgetify%2FYou-Dont-Know-JS&d=v1VleAHhEtVq%2BT6ZJOMX9f6YfqAiA4jm3R2Vm1010vU%3D&h=809401f4\" target=\"_blank\">https://github.com/getify/You-Dont-Know-JS</a><br />\n<br />\nArchitecture呢我就recommend一個blog裏面講嘅專題系列: How JavaScript works<br />\n<a href=\"https://blog.sessionstack.com/tagged/tutorial\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fblog.sessionstack.com%2Ftagged%2Ftutorial&d=v1VleAHhEtVq%2BT6ZJOMX9f6YfqAiA4jm3R2Vm1010vU%3D&h=eb7368d8\" target=\"_blank\">https://blog.sessionstack.com/tagged/tutorial</a>, 佢係好深入咁探討JS engine(s)嘅內部運作"},{"pid":"764a443aad40cdbbc94f02499b1583924a1ffb2e","tid":563847,"uid":37431,"like":3,"dislike":1,"score":2,"citedBy":1,"replyTime":"2018-02-17T15:54:56.000Z","msg":"<span style=\"font-size: xx-large;\">好撚多毒撚<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> </span>"},{"pid":"ad272222a8a0e63bf521c48b7522fb8807221560","tid":563847,"uid":33883,"like":1,"dislike":1,"score":0,"quote":{"pid":"764a443aad40cdbbc94f02499b1583924a1ffb2e","tid":563847,"uid":37431,"like":3,"dislike":1,"score":2,"citedBy":1,"replyTime":"2018-02-17T15:54:56.000Z","msg":"<span style=\"font-size: xx-large;\">好撚多毒撚<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> </span>"},"citedBy":0,"replyTime":"2018-02-17T16:05:11.000Z","msg":"冇計, 年已經一早拜晒(我去親戚度&amp;親戚嚟我度), 平時去開消閒嘅地方又冇開到, 局住成日係屋企上網hea囉! <img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />"},{"pid":"b730c7b79e438c3263737a2f6ba88719f48720db","tid":563847,"uid":51134,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T16:11:02.000Z","msg":"想由零開始學js 想問下有咩書/網推薦"},{"pid":"089a295f1ecd07cdd847a98a6c01b2fc057fff6f","tid":563847,"uid":33883,"like":1,"dislike":0,"score":1,"quote":{"pid":"b730c7b79e438c3263737a2f6ba88719f48720db","tid":563847,"uid":51134,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T16:11:02.000Z","msg":"想由零開始學js 想問下有咩書/網推薦"},"citedBy":0,"replyTime":"2018-02-17T16:19:43.000Z","msg":"I recommend &quot;The Modern JavaScript Tutorial&quot;, 由淺入深, 又多examples, 幾唔錯!<br />\n<a href=\"https://javascript.info/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fjavascript.info%2F&d=v1VleAHhEtVq%2BT6ZJOMX9f6YfqAiA4jm3R2Vm1010vU%3D&h=be02f645\" target=\"_blank\">https://javascript.info/</a>"},{"pid":"b136b77e2ca0c4ea301f0e683a3af79e386e70f7","tid":563847,"uid":108937,"like":0,"dislike":0,"score":0,"quote":{"pid":"2c646943b7f4e0f75f89b77e246aa81996aa0c82","tid":563847,"uid":33883,"like":2,"dislike":1,"score":1,"quote":{"pid":"d0bce6c7ce0b9f2cfd429329493063f954abe57d","tid":563847,"uid":79869,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T14:27:55.000Z","msg":"講起reduce(), 其實有人講過js既implementation是錯的, reduce()應該要return一個array才是functional的做法"},"citedBy":1,"replyTime":"2018-02-17T15:37:23.000Z","msg":"如果係有initialValue嘅, JS個reduce() method我又唔覺同Haskell(呢個pure functional language)個foldl function有乜分別, 大家都係return一個combined value, 唔係array喎:<br />\n<img src=\"https://image.ibb.co/dro7Y7/fold_in_Haskell.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Fdro7Y7%2Ffold_in_Haskell.jpg&h=b5cababb&s={SIZE}\" /><br />\n<br />\nBTW, Haskell's formal definition of <br />\n<span style=\"color: green;\">foldl               :: (b -&gt;a -&gt;b) -&gt; b -&gt; [a] -&gt; b<br />\nfoldl f v []       = v<br />\nfoldl f v (x:xs) = foldl f (f v x) xs</span><br />\n<br />\n<span style=\"color: blue;\">foldr               :: (a -&gt;b -&gt;b) -&gt; b -&gt; [a] -&gt; b<br />\nfoldr f v []       = v<br />\nfoldr f v (x:xs) = foldr f (f xs v) x</span><br />\n<br />\n反而覺得JS冇initialValue嘅reduce() method implementation會唔會係bug嚟呢?<img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" />"},"citedBy":1,"replyTime":"2018-02-21T18:26:11.000Z","msg":"<img src=\"/assets/faces/normal/good.gif\" class=\"hkgmoji\" /> <br />\n冇錯，reduce 係應該return combined value instead of an array<br />\nreduce without initial value is like foldl0 in Haskell."},{"pid":"39fc56fe5392199694a792d3967dab6b8eee7247","tid":563847,"uid":108937,"like":0,"dislike":0,"score":0,"quote":{"pid":"b136b77e2ca0c4ea301f0e683a3af79e386e70f7","tid":563847,"uid":108937,"like":0,"dislike":0,"score":0,"quote":{"pid":"2c646943b7f4e0f75f89b77e246aa81996aa0c82","tid":563847,"uid":33883,"like":2,"dislike":1,"score":1,"quote":{"pid":"d0bce6c7ce0b9f2cfd429329493063f954abe57d","tid":563847,"uid":79869,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2018-02-17T14:27:55.000Z","msg":"講起reduce(), 其實有人講過js既implementation是錯的, reduce()應該要return一個array才是functional的做法"},"citedBy":1,"replyTime":"2018-02-17T15:37:23.000Z","msg":"如果係有initialValue嘅, JS個reduce() method我又唔覺同Haskell(呢個pure functional language)個foldl function有乜分別, 大家都係return一個combined value, 唔係array喎:<br />\n<img src=\"https://image.ibb.co/dro7Y7/fold_in_Haskell.jpg\" data-thumbnail-src=\"https://i.lih.kg/thumbnail?u=https%3A%2F%2Fimage.ibb.co%2Fdro7Y7%2Ffold_in_Haskell.jpg&h=b5cababb&s={SIZE}\" /><br />\n<br />\nBTW, Haskell's formal definition of <br />\n<span style=\"color: green;\">foldl               :: (b -&gt;a -&gt;b) -&gt; b -&gt; [a] -&gt; b<br />\nfoldl f v []       = v<br />\nfoldl f v (x:xs) = foldl f (f v x) xs</span><br />\n<br />\n<span style=\"color: blue;\">foldr               :: (a -&gt;b -&gt;b) -&gt; b -&gt; [a] -&gt; b<br />\nfoldr f v []       = v<br />\nfoldr f v (x:xs) = foldr f (f xs v) x</span><br />\n<br />\n反而覺得JS冇initialValue嘅reduce() method implementation會唔會係bug嚟呢?<img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" />"},"citedBy":1,"replyTime":"2018-02-21T18:26:11.000Z","msg":"<img src=\"/assets/faces/normal/good.gif\" class=\"hkgmoji\" /> <br />\n冇錯，reduce 係應該return combined value instead of an array<br />\nreduce without initial value is like foldl0 in Haskell."},"citedBy":0,"replyTime":"2018-02-21T18:26:58.000Z","msg":"foldl1**"},{"pid":"19cdfc1d9355de1850995fffab5008c4e91e9b17","tid":563847,"uid":34217,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2018-02-22T04:11:05.000Z","msg":"Lau man learn learn"},{"pid":"64c35482c925462544ccfeffa49d1d64305c3046","tid":563847,"uid":61249,"like":0,"dislike":1,"score":-1,"citedBy":0,"replyTime":"2018-02-23T14:58:57.000Z","msg":"上面example 咁，functional 寫法，一call 就好唔declarative <br />\na(b(c)))咁<br />\n<br />\n好睇既functional 係一層層咁落，好似寫詩咁<br />\n<br />\ngetTotal()<br />\n .addTax()<br />\n ....()"}]}