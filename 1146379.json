{"tid":1146379,"cid":18,"subCid":0,"title":"[問題]識用VBA code 踩地雷嘅program??","createTime":"2019-05-09T08:01:51.000Z","updateTime":"2019-05-09T13:36:42.000Z","uid":197897,"like":2,"dislike":0,"uniUserReply":4,"replies":[{"pid":"99ff204c78634eef79770fe51da7bd75f9a4b52d","tid":1146379,"uid":197897,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2019-05-09T08:01:51.000Z","msg":"Option Explicit<br />\n<br />\n' Variable declaration<br />\nDim num_mines As Integer<br />\nDim num_solved_mines As Integer<br />\nDim map(1 To 8, 1 To 8) As Integer<br />\nDim is_playing As Boolean<br />\n<br />\n' This event handler will be invoked when a double click event is generated<br />\nPrivate Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)<br />\n    ' Disable the editablity<br />\n    Cancel = True<br />\n    <br />\n    ' If we double click on cell &quot;New game&quot;, two subs, NewGame and DrawMap<br />\n    ' will be executed<br />\n    If Target.Address = Range(&quot;New&quot;).Address Then<br />\n        NewGame<br />\n        DrawMap<br />\n    ' If we double click on cell &quot;Reset&quot;, the game will be reset accordingly<br />\n    ElseIf Target.Address = Range(&quot;Reset&quot;).Address Then<br />\n        num_solved_mines = 0<br />\n        Range(&quot;SolvedMines&quot;).Font.Color = vbBlack<br />\n        Range(&quot;SolvedMines&quot;) = num_solved_mines<br />\n        DrawMap<br />\n    ' If we double click on any cell in the battlefield, we will update the<br />\n    ' display accordingly<br />\n    ElseIf (Target.row &gt;= 4 And Target.row &lt;= 11) And _<br />\n    (Target.Column &gt;= 3 And Target.Column &lt;= 10) Then<br />\n        If is_playing = True Then<br />\n            UpdateDisplay Target.row, Target.Column<br />\n        End If<br />\n    End If<br />\nEnd Sub<br />\n<br />\n' Get prepared for a new gameplay<br />\nSub NewGame()<br />\n    ' Local variables<br />\n    Dim count As Integer<br />\n    Dim rand_row As Integer, rand_col As Integer<br />\n    Dim row As Integer, col As Integer<br />\n    <br />\n    ' Since the game is about to start, this Boolean variable is set to true<br />\n    is_playing = True<br />\n    <br />\n    ' Ask for the number of mines<br />\n    num_mines = InputBox(&quot;Enter the number of mines (1-20):&quot;)<br />\n    <br />\n    ' Initialize the 2D integer array map so that all the cells are 0<br />\n    ' Hint: use a 2D array to achieve it<br />\n    ' Your code HERE<br />\n    Dim my_2D_array(num_mines, num_mines) As Integer<br />\n    my_2D_array(num_mines, num_mines) = 0<br />\n    <br />\n    ' Number of solved mines are definitely 0 <img src=\"/assets/faces/normal/smile.gif\" class=\"hkgmoji\" /><br />\n    num_solved_mines = 0<br />\n    Range(&quot;NumMines&quot;) = num_mines<br />\n    Range(&quot;SolvedMines&quot;) = num_solved_mines<br />\n    Range(&quot;SolvedMines&quot;).Font.Color = vbBlack<br />\n    <br />\n    ' Randomly place the mines<br />\n    For count = 1 To num_mines<br />\n        ' Pick a random location (i.e., row and col indices) which contains no mines<br />\n        ' Hint: use a do while loops make the most sense out of it<br />\n        ' Your code HERE<br />\n        Do<br />\n        <br />\n        ' Put the mine into the random location (i.e., assign 1 to map(rand_row, rand_col)<br />\n        ' Your code HERE<br />\n    Next<br />\nEnd Sub<br />\n<br />\n' Dram the battlefield using grey<br />\nSub DrawMap()<br />\n    Dim row As Integer, col As Integer<br />\n    For row = 1 To 8<br />\n        For col = 1 To 8<br />\n            Cells(row + 3, col + 2).ClearContents<br />\n            Cells(row + 3, col + 2).Interior.Color = RGB(170, 170, 170)<br />\n        Next<br />\n    Next<br />\nEnd Sub<br />\n<br />\n<br />\n' Calculate the number of adjacent mines<br />\nFunction CalcNumMines(row As Integer, col As Integer) As Integer<br />\n    CalcNumMines = 0<br />\n    <br />\n    If row = 1 Then<br />\n        CalcNumMines = CalcNumMines + map(row + 1, col)<br />\n<br />\n        If col = 1 Then<br />\n            CalcNumMines = CalcNumMines + map(row, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col + 1)<br />\n        ElseIf col = 8 Then<br />\n            CalcNumMines = CalcNumMines + map(row, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col - 1)<br />\n        Else"},{"pid":"300487ce17f05012240b01bdb1848c07cd9d099c","tid":1146379,"uid":136590,"like":1,"dislike":0,"score":1,"citedBy":0,"replyTime":"2019-05-09T08:06:21.000Z","msg":"最尾個function啲End If唔見曬<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />"},{"pid":"4498d0a0c96afbb0a4d591703220505ddbb49484","tid":1146379,"uid":197897,"like":1,"dislike":0,"score":1,"citedBy":0,"replyTime":"2019-05-09T09:14:24.000Z","msg":"CalcNumMines = CalcNumMines + map(row, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col + 1)<br />\n        End If<br />\n    ElseIf row = 8 Then<br />\n        CalcNumMines = CalcNumMines + map(row - 1, col)<br />\n<br />\n        If col = 1 Then<br />\n            CalcNumMines = CalcNumMines + map(row, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col + 1)<br />\n        ElseIf col = 8 Then<br />\n            CalcNumMines = CalcNumMines + map(row, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col - 1)<br />\n        Else<br />\n            CalcNumMines = CalcNumMines + map(row, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col + 1)<br />\n        End If<br />\n    Else<br />\n        CalcNumMines = CalcNumMines + map(row - 1, col)<br />\n        CalcNumMines = CalcNumMines + map(row + 1, col)<br />\n        <br />\n        If col = 1 Then<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col + 1)<br />\n        ElseIf col = 8 Then<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col - 1)<br />\n        Else<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col + 1)<br />\n            CalcNumMines = CalcNumMines + map(row - 1, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row, col - 1)<br />\n            CalcNumMines = CalcNumMines + map(row + 1, col - 1)<br />\n        End If<br />\n    <br />\n    End If<br />\nEnd Function<br />\n<br />\n' Update the display when a cell in the battlefield is clicked<br />\nSub UpdateDisplay(row As Integer, col As Integer)<br />\n    ' Note that row and col are the actual row and col indices of a cell<br />\n    ' e.g., row:4, col:3 in Excel refers to the element (1,1) in variable map<br />\n    <br />\n    ' If the cell contains no mines<br />\n    '   If the number of adjacent cells is larger than 0<br />\n    '      Change the color of the cell to white<br />\n    '      Display the number of adjacent cell on that cell<br />\n    '   Else<br />\n    '      &quot;Unfold&quot; all nearby empty cells<br />\n    '      (you can simply call subroutine UnfoldEmpty for that)<br />\n    ' Else<br />\n    '   If the cell is not marked as &quot;?&quot; then<br />\n    '      Display a gameover message (i.e., &quot;Boom!!&quot;)<br />\n    '      Highlight the cell by red<br />\n    '      Set variable is_playing as false since the game is over<br />\n    <br />\n    ' Your code HERE<br />\n    If cell(row, col) = 0 Then<br />\n        If CalcNumMines &gt; 0 Then<br />\n            cell(row, col).Interior.colour = vbwhitle<br />\n            <br />\n        <br />\nEnd Sub<br />\n<br />\nPrivate Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)<br />\n    ' Disable the right-click menu<br />\n    Cancel = True<br />\n    ' If the cell is not marked<br />\n    If Target.Interior.Color = RGB(170, 170, 170) Then<br />\n        ' 1. Increase num_solved_mines by 1<br />\n        ' 2. Display num_solved_mines at cell &quot;SolvedMines&quot;<br />\n        ' 3. Change the color of the involved cell to Cyan<br />\n        ' 4. Change its text to &quot;?&quot;<br />\n        ' 5. Call subroutine GameOver to see whether all mines are marked<br />\n        ' Your code HERE<br />\n        num_solved_mines = num_solved_mines + 1<br />\n        Target.Address = &quot;SolvedMines&quot;<br />\n    ' If the cell has been marked<br />\n    ElseIf Target.Interior.Color = vbCyan Then<br />\n        ' 1. Change the color of the involved cell to RGB(170, 170, 170)<br />\n        ' 2. Clear its contents<br />\n        ' 3. Update the content at cell &quot;SolvedMines&quot;<br />\n        Target.Interior.Color = RGB(170, 170, 170)<br />\n    End If<br />\n    ' Highlight the number accordingly<br />\n    If num_solved_mines &gt; num_mines Then<br />\n        Range(&quot;SolvedMines&quot;).Font.Color = vbRed<br />\n    Else<br />\n        Range(&quot;SolvedMines&quot;).Font.Color = vbBlack<br />\n    End If<br />\nEnd Sub"},{"pid":"def2931a4f37895903096d20dbdb9891a49b66d5","tid":1146379,"uid":46488,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2019-05-09T09:15:17.000Z","msg":"非IT狗LM"},{"pid":"ae3da96ad40f42495b1723cbe795dc61abaabc1b","tid":1146379,"uid":34241,"like":1,"dislike":0,"score":1,"citedBy":0,"replyTime":"2019-05-09T13:36:42.000Z","msg":"貼去pastebin啦仆街"}]}