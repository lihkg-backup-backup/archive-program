{"tid":2399047,"cid":26,"subCid":0,"title":"[有repo] [Lang] 講下整Programming Language","createTime":"2021-02-07T19:38:40.000Z","updateTime":"2021-02-09T15:15:03.000Z","uid":147721,"like":10,"dislike":2,"uniUserReply":14,"replies":[{"pid":"14e3e5c4bfbb3f971880942cdff9874da76f7ac6","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-07T19:38:40.000Z","msg":"開波之前講四點<br />\n<br />\n1. 唔好quote長文<img src=\"/assets/faces/normal/clown.gif\" class=\"hkgmoji\" /> 善用不推文<img src=\"/assets/faces/normal/clown.gif\" class=\"hkgmoji\" /><br />\n<br />\n2. sorry今次既講下po寫得比較倉卒<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /><br />\n篇幅控制得唔係咁好<br />\nprogramming language太多內容 有限既時間下唔可能寫太多<br />\n即使只係有限既內容 但係因為無咩時間寫 所以仍然好簡陋<img src=\"/assets/faces/normal/frown.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/frown.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/frown.gif\" class=\"hkgmoji\" /><br />\n未來可能有重編/後續po 但唔好有期望<br />\n手巴仲有一堆兩三年學術po未找數<img src=\"/assets/faces/normal/chicken.gif\" class=\"hkgmoji\" /><br />\n<br />\n3. 呢個po既定位 係比識programming但唔識implement programming language既巴絲<br />\nAssume大家有少少low level知識<img src=\"/assets/faces/normal/flowerface.gif\" class=\"hkgmoji\" /><br />\n例如知道CPU有register<br />\nLocal variable係放係Stack<br />\n同埋知道abstract syntax tree係好好用既structure<br />\n想要參考資料既巴絲 可以睇#2<img src=\"/assets/faces/normal/photo.gif\" class=\"hkgmoji\" /><br />\n<br />\n呢個po希望比到一個起點 令睇完既巴絲可以整到一隻&quot;Hello world&quot;既toy programming language<img src=\"/assets/faces/normal/agree.gif\" class=\"hkgmoji\" /><br />\n呢個po唔會涉及如何design programming language 只會講點implement<br />\n因為手巴覺得 鹹魚白菜各有所好 你中意點就點<br />\n最重要既係 你有idea之後點整個demo出黎<img src=\"/assets/faces/normal/z.gif\" class=\"hkgmoji\" /><br />\n<br />\n手巴唔係話design唔重要<br />\n如果你想針對某啲use case去令programmer方便啲<br />\n咁的確要特別去design<br />\n但係手巴都唔知你中意針對咩use case 所以講唔到具體<br />\n而無具體details諗法 得rough idea 講黎都唔知做咩<img src=\"/assets/faces/normal/z.gif\" class=\"hkgmoji\" /><br />\n<br />\n4. 今次呢個大topic 好複雜 亦都好易講錯<br />\n手巴都知自己係軟件台得罪人多 稱呼人少<br />\n所以希望大家唔好屌太大力<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />"},{"pid":"d2acc0d1871aad565981ecaa0cb6a0c9a3e429f3","tid":2399047,"uid":147721,"like":1,"dislike":0,"score":1,"citedBy":0,"replyTime":"2021-02-07T19:39:00.000Z","msg":"參考資料<br />\n<br />\n小木偶組合語言教學網頁<br />\n<a href=\"https://wanker742126.neocities.org/index.html\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fwanker742126.neocities.org%2Findex.html&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=5584ec55\" data-auto-link target=\"_blank\">https://wanker742126.neocities.org/index.html</a><br />\n<br />\nx86 manual<br />\n<a href=\"https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fwww.intel.com%2Fcontent%2Fdam%2Fwww%2Fpublic%2Fus%2Fen%2Fdocuments%2Fmanuals%2F64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=468b994a\" data-auto-link target=\"_blank\">https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf</a><br />\n<br />\nx86 short reference<br />\n<a href=\"https://www.felixcloutier.com/x86/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fwww.felixcloutier.com%2Fx86%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=47021593\" data-auto-link target=\"_blank\">https://www.felixcloutier.com/x86/</a><br />\n<br />\nx86 online asm/disasm<br />\n<a href=\"http://shell-storm.org/online/Online-Assembler-and-Disassembler/\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2Fshell-storm.org%2Fonline%2FOnline-Assembler-and-Disassembler%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=48e8d228\" data-auto-link target=\"_blank\">http://shell-storm.org/online/Online-Assembler-and-Disassembler/</a><br />\n<br />\nAbstract Syntax Tree<br />\n<a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FAbstract_syntax_tree&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=104b39a0\" data-auto-link target=\"_blank\">https://en.wikipedia.org/wiki/Abstract_syntax_tree</a><br />\n<br />\nchevrotain<br />\n<a href=\"https://sap.github.io/chevrotain/docs/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fsap.github.io%2Fchevrotain%2Fdocs%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=4179ab55\" data-auto-link target=\"_blank\">https://sap.github.io/chevrotain/docs/</a>"},{"pid":"eddc2dc76dfba8db3954dc30327f01287f8a2691","tid":2399047,"uid":147721,"like":3,"dislike":0,"score":3,"citedBy":0,"replyTime":"2021-02-07T19:42:30.000Z","msg":"首先我地求其覆習返compiler/interpreter 識既巴絲請飛<br />\n<br />\nCompiler係將Code變做machine code既工具<br />\n一般黎講 Compiler首先會將code變成AST<br />\n然後將AST變成ASM<br />\n再將ASM變成object file<br />\n最後將好多個object file變成executable file<br />\n<br />\nCode -&gt; AST 既過程叫parsing<br />\nAST係一棵任你定既tree 用tree係因為可以好自然咁recursive visit啲node<br />\n例如&quot;1+2*3&quot;咁 一般個AST node會係類似<br />\n<pre><code data-type=\"\">{\n    operator: '+',\n    LHS: 1,\n    RHS: {\n        operator: '*',\n        LHS: 2,\n        RHS: 3\n    }\n}</code></pre><br />\nfunction既AST node就會類似<br />\n<pre><code data-type=\"\">{\n    name: 'main',\n    return_type: 'int',\n    param: [\n        {\n            type: 'int',\n            name: 'argc'\n        }\n    ],\n    body_statements: [\n        ...\n    ],\n}</code></pre><br />\n只要係你覺得有用既資訊 都可以任加落去個AST到<img src=\"/assets/faces/normal/like.gif\" class=\"hkgmoji\" /><br />\n<br />\n如果你想既話 你都可以跟其他人既AST format 例如GCC既AST<br />\n咁既話你就可以掉個AST比GCC去做後續既野<img src=\"/assets/faces/normal/like.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/good.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/like.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/good.gif\" class=\"hkgmoji\" /><br />\n唔跟都完全無問題<img src=\"/assets/faces/normal/slick.gif\" class=\"hkgmoji\" /> 只係要自己去做後續野<br />\n<br />\nAST -&gt; ASM 既過程叫compiling<br />\nASM -&gt; object file既過程叫assembling<br />\n由於assembly language同machine code係高度對應<br />\n所以其實assembling唔係真係做好多野(會做啲label/var address resolving 搞具體object file format之類)<br />\n呢兩個過程融合埋一齊都唔出奇<br />\n<br />\n唔同既平台會用唔同既machine code<br />\n所以Compiler會出唔同version比唔同既target platform<br />\n常見既platform有i386~i686~ia32~x86, ia64, x86_64~amd64, armv7l, armv8之類<br />\n(另外compiler係可以cross compile 即係個host platform同target platform唔同<br />\n例如 你係windows上compile出個linux既executable 或者係x86 linux上compile出個arm既executable)<br />\n<br />\n呢個compiling既過程可以好複雜 牽涉好多optimization 例如loop unrolling同function inlining<br />\n但係亦可以好簡單 一對一咁由AST出啲好無效率但行到既ASM <span class=\"small\">呢樣係呢個po會做既野</span><br />\n<br />\nobject files -&gt; executable既過程叫linking<br />\n呢個過程係將幾個object files合埋一齊<br />\n例如係C++ 你可以將啲野係header到declare 令到a.cpp用到b.cpp先define既野<br />\n其實就係啲野既machine code係b.o到 然後link個時 linker係a.o入面用到個啲野既位 填返啱既address入去<br />\n有啲compiler會係呢個過程加啲optimization入去 例如link-time inlining<br />\nbtw linking係可以對應咁係runtime做 只不過runtime做個時叫loading<br />\n例如windows到load一個dll 或者linux load一個so<br />\n<br />\ninterpreter就係直接run code既工具<br />\n做法有兩種 一種係直接望住個AST黎行<br />\n另一種係將AST just-in-time compile做byte code 然後有VM去行byte code (或者compile做machine code都得)<br />\n兩種做法並唔係互斥 而係可以混合<br />\n因為有啲可能只行一兩次既部分 個interpreter判斷唔值得晒時間去compile個部分<br />\n又或者某種language非常動態 compile做byte code唔會有significant既improvement"},{"pid":"d2b50ae42457ea323a3ad5b8c364a0f2da095c6e","tid":2399047,"uid":59832,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-07T19:43:45.000Z","msg":"手b<img src=\"/assets/faces/mouse/pray.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/mouse/pray.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/mouse/pray.gif\" class=\"hkgmoji\" />"},{"pid":"4fb275c34565730848c4499469f8cbfda9b26f85","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-07T19:45:24.000Z","msg":"咁我地implement一隻language個時 有咩要留意呢<img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" /><br />\n1. 個language既grammar<br />\n2. 點樣基於個grammar寫個parser去將code變做AST<br />\n3. 點樣寫個compiler去將AST變做ASM<br />\n其他野都可以話係配套 而唔係核心<br />\n<br />\n手巴為左Demo 整左個<strong><span class=\"red\">toy </span></strong>language implementation: ttt<br />\n<a href=\"https://github.com/handbro/ttt\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fgithub.com%2Fhandbro%2Fttt&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=e6241c95\" target=\"_blank\">https://github.com/handbro/ttt</a><br />\n(由於時間所限 暫時只係implement左variable同if<br />\nwhile/general function call留左位但未整 可能下星期補上<img src=\"/assets/faces/fs/chicken.gif\" class=\"hkgmoji\" />)<br />\n<br />\n呢舊ttt會將個toy language compile做COM file<br />\nparsing既部分 用左chevrotain呢個parsing library<br />\ncompiling既部分 就係由零寫出黎 將AST compile做好無效率既COM file 完全無做optimization<img src=\"/assets/faces/normal/chicken.gif\" class=\"hkgmoji\" /><br />\n<br />\n(可能你會覺得用parsing library同唔做optimization係作弊<br />\n但留意返呢個po係講整programming language既起點<br />\n而唔係講整個好勁既compiler<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />)<br />\n<br />\n揀用js去寫compiler既原因 係因為可以輕鬆demo 只要用browser開就行到<img src=\"/assets/faces/normal/slick.gif\" class=\"hkgmoji\" /><br />\n<br />\n揀COM做target platform既原因有兩個<br />\n1. COM file既格式好簡單 就係無格式 直接一堆x86(16 bit)既machine code<img src=\"/assets/faces/normal/tongue.gif\" class=\"hkgmoji\" /><br />\n2. 有jsdos可以直接係browser到行compile出黎既COM file 唔駛download落本機<img src=\"/assets/faces/normal/tongue.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/tongue.gif\" class=\"hkgmoji\" /><img src=\"/assets/faces/normal/tongue.gif\" class=\"hkgmoji\" /><br />\n<br />\n係呢個情況下 要implement一隻language 只需要識三樣野<br />\n1. 點用chevrotain<br />\n2. x86既基本知識 同相關工具<br />\n3. 點分配address比啲variable/function/literal"},{"pid":"607e8ca26e5f6e546f47e27d2dff913eeb13f951","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-07T19:48:19.000Z","msg":"點parse<br />\n<br />\nchevrotain既tutorial係呢到<br />\n<a href=\"https://sap.github.io/chevrotain/docs/tutorial/step0_introduction.html\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fsap.github.io%2Fchevrotain%2Fdocs%2Ftutorial%2Fstep0_introduction.html&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=4249cf48\" target=\"_blank\">https://sap.github.io/chevrotain/docs/tutorial/step0_introduction.html</a><br />\ndocumentation<br />\n<a href=\"https://sap.github.io/chevrotain/documentation/7_1_1/globals.html\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fsap.github.io%2Fchevrotain%2Fdocumentation%2F7_1_1%2Fglobals.html&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=1384f4e9\" target=\"_blank\">https://sap.github.io/chevrotain/documentation/7_1_1/globals.html</a><br />\n<br />\n佢既用法都好直觀<img src=\"/assets/faces/dog/touch.gif\" class=\"hkgmoji\" /> 例如咁<br />\n<pre><code data-type=\"\">$.RULE('function', () =&gt; {\n    let return_type = $.SUBRULE($.type);\n    let function_name = $.CONSUME(tokens.identifier).image;\n    $.CONSUME(tokens.round_open);\n    let params = [];\n    $.MANY_SEP({\n        SEP: tokens.comma,\n        DEF: () =&gt; {\n            let type = $.SUBRULE2($.type);\n            let name = $.CONSUME2(tokens.identifier).image;\n            params.push({\n                type: type,\n                name: name,\n            });\n        }\n    });\n    $.CONSUME(tokens.round_close);\n    $.CONSUME(tokens.curly_open);\n    let body = $.SUBRULE($.statements);\n    $.CONSUME(tokens.curly_close);\n    return {\n        return_type: return_type,\n        function_name: function_name,\n        params: params,\n        body: body,\n    };\n});</code></pre><br />\n<br />\n用SUBRULE/COMSUME表示個rule包含啲咩組成部分 MANY去表示重複<br />\n例子無講到 仲有OR表示alternative OPTION表示optional<br />\n<br />\nchevrotain本身已經有tutorial 所以唔詳細講了<img src=\"/assets/faces/dog/itdog1.gif\" class=\"hkgmoji\" />"},{"pid":"7714f70b0a305ec67b552da08c9b8ee73d36a2ad","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-07T19:52:00.000Z","msg":"點compile<br />\n<br />\n將AST轉做machine code既過程 其實都係recursive咁去visit個AST<img src=\"/assets/faces/normal/agree.gif\" class=\"hkgmoji\" /><br />\n例如(some expression A) + (some expression B)咁<br />\n其實就係先compile A 放去某個位<br />\n再compile B 放去另一個位<br />\n最後append段短machine code去做加數<br />\n<br />\n呢到兩個元素點做<br />\n1. 啲野放去邊<br />\n2. operation用咩machine code sequence<br />\n就係睇返platform既具體細節<br />\n<br />\nx86(16bit)黎講 CPU有啲general purpose registers 例如ax bx cx dx 可以用黎放住野係CPU到先<br />\n另外當然可以用memory黎放野 下面再講 呢到先講左operation<br />\noperation用啲咩machine code sequence 就係枯燥既查字典過程<img src=\"/assets/faces/pig/read.gif\" class=\"hkgmoji\" /><br />\n不過有啲工具可以幫你去快啲查到野<br />\n例如有人整左啲簡短版既reference 唔駛下下查intel本超長manual<br />\n<a href=\"https://www.felixcloutier.com/x86/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fwww.felixcloutier.com%2Fx86%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=47021593\" target=\"_blank\">https://www.felixcloutier.com/x86/</a><br />\n又例如有online版既assembler/disassembler<br />\n可以好快咁asm/disasm啲ASM snippet<br />\n<a href=\"http://shell-storm.org/online/Online-Assembler-and-Disassembler/\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2Fshell-storm.org%2Fonline%2FOnline-Assembler-and-Disassembler%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=48e8d228\" target=\"_blank\">http://shell-storm.org/online/Online-Assembler-and-Disassembler/</a><br />\n<br />\n只要你所有operation都有對應既machine code sequence 再visit個AST 就可以話搞掂左8成<br />\n係手巴既ttt入面 啲operation大致上都係<br />\n1. 將left hand side放入ax<br />\n2. 將right hand side放入bx<br />\n3. 拎ax同bx去計野 結果放入ax<br />\n4. 將下一個right hand side放入bx 重複<br />\n<br />\n特別啲既野 好似function call咁 就要查一樣叫calling convention既野<img src=\"/assets/faces/normal/wink.gif\" class=\"hkgmoji\" /><br />\ncalling convention決定左啲argument點樣由caller傳比callee 同埋其他瑣碎細節<br />\n佢係一個合約黎 跟住implement就ok<br />\n例如x86咁有好多calling convention<br />\n但主要都係用stack去pass argument 跟住個標準去push啲野入stack就ok<br />\n<br />\n而control flow branching (eg. if)<br />\nx86入面係用conditional jmp去跳過你唔想行既部分<br />\n例如 如果我想ax == 0個時 就跳去好後 唔行黎緊個啲野 就可以<br />\ntest ax, ax<br />\njz &lt;address&gt;<br />\n當ax == 0個時 就會執行jz跳走<br />\n想用唔同既condition x86都有提供好多conditional jmp<br />\n同啱啱講既一樣 都係枯燥既查字典過程<img src=\"/assets/faces/pig/knife.gif\" class=\"hkgmoji\" />"},{"pid":"085636517c6b786925e77365468518f8a4e6f298","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-07T19:53:30.000Z","msg":"點分配address比啲野<br />\n<br />\n呢啲野牽涉到semantic 即係你個AST到底代表緊咩意思<br />\nsemantic視呼你中意點設計就點設計 無標準既<img src=\"/assets/faces/pig/sowhat.gif\" class=\"hkgmoji\" /><br />\nttt入面 所有variable都係local variable 而且係static scope 即係好似c++咁<br />\n咁既情況 只需要compile time保留個variable&lt;-&gt;address既表<img src=\"/assets/faces/pig/read.gif\" class=\"hkgmoji\" /><br />\ndeclare variable個時加個entry入表<img src=\"/assets/faces/pig/heard.gif\" class=\"hkgmoji\" /><br />\n用到variable個時lookup<img src=\"/assets/faces/pig/knife.gif\" class=\"hkgmoji\" /><br />\n有nested scope個時 stack起個表<img src=\"/assets/faces/pig/upset.gif\" class=\"hkgmoji\" /><br />\n<br />\n比較下 有啲language係用dynamic scope 相信大家未必用過<br />\n但係做法係好類似 只係個表係run time一路maintain 而唔係compile time搞掂晒<img src=\"/assets/faces/pig/shocked.gif\" class=\"hkgmoji\" /><br />\n<br />\nlanguage入面仲有好多關於address既野<br />\n例如c++到 點樣知道virtual function係call緊咩<br />\n又或者linking 點樣知道a.o用b.o既邊啲野<br />\n其實都係查表<img src=\"/assets/faces/pig/dying.gif\" class=\"hkgmoji\" /> 分別只係在於<br />\n個表係compile time定runtime產生出黎<br />\n個表係compile time已經加晒entry 定係runtime都仲要加<br />\n個表係compile time已經做晒lookup 定係runtime都仲要繼續lookup"},{"pid":"f29541ab4b5251a3454657c0f3c5a438cbf9e89b","tid":2399047,"uid":147721,"like":1,"dislike":0,"score":1,"citedBy":0,"replyTime":"2021-02-07T19:55:00.000Z","msg":"上面講過既野 都可以係ttt既code都搵到<br />\nttt到都加左啲comment 係手巴暫時寫得最多comment既project<img src=\"/assets/faces/dog/smile.gif\" class=\"hkgmoji\" /><br />\n希望呢個po可以幫到大家對整language多左了解<br />\n可以令大家覺得原來整language都唔係真係難到做唔到<img src=\"/assets/faces/dog/bye.gif\" class=\"hkgmoji\" /><br />\n<br />\n當然要整language仲有好多方案<br />\n呢個po亦只係涵蓋左好少好少好少既野 1%都無<br />\n但係希望呢個po 會係講到整language最開頭最起點個1% 講到點樣由純idea到起頭<img src=\"/assets/faces/lomoji/38.png\" class=\"hkgmoji\" />"},{"pid":"9c510a64cc5af674c33dce75a22fd9a7ae576344","tid":2399047,"uid":147721,"like":0,"dislike":1,"score":-1,"citedBy":0,"replyTime":"2021-02-07T19:57:13.000Z","msg":"暫時完<br />\n攰 訓<img src=\"/assets/faces/mouse/tired.gif\" class=\"hkgmoji\" /><br />\n都唔知叫寫得少定寫得多 講compiler黎講好少 講長度好似長長地<img src=\"/assets/faces/mouse/tired.gif\" class=\"hkgmoji\" /><br />\n<br />\n<br />\n<br />\nbtw<img src=\"/assets/faces/normal/offtopic.gif\" class=\"hkgmoji\" />光復香港 時代革命"},{"pid":"b7f89ac82d81dd548c7cc797f6b447ffb81bfad2","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-07T19:59:49.000Z","msg":"唔記得講點玩ttt<br />\n<br />\n<a href=\"https://handbro.github.io/ttt/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fhandbro.github.io%2Fttt%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=d94953c3\" target=\"_blank\">https://handbro.github.io/ttt/</a><br />\n左上角打code<br />\n右下角係dos <a href=\"http://compile完之後打a.com\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2Fcompile%E5%AE%8C%E4%B9%8B%E5%BE%8C%E6%89%93a.com&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=9b5cceca\" data-auto-link target=\"_blank\">compile完之後打a.com</a>去run<br />\n<br />\n同埋發現唔記得講dos api 後補"},{"pid":"215cf5ca03c22dd9d0ee48a87f346e1413619cbc","tid":2399047,"uid":193294,"like":0,"dislike":0,"score":0,"quote":{"pid":"b7f89ac82d81dd548c7cc797f6b447ffb81bfad2","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-07T19:59:49.000Z","msg":"唔記得講點玩ttt<br />\n<br />\n<a href=\"https://handbro.github.io/ttt/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fhandbro.github.io%2Fttt%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=d94953c3\" target=\"_blank\">https://handbro.github.io/ttt/</a><br />\n左上角打code<br />\n右下角係dos <a href=\"http://compile完之後打a.com\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2Fcompile%E5%AE%8C%E4%B9%8B%E5%BE%8C%E6%89%93a.com&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=9b5cceca\" data-auto-link target=\"_blank\">compile完之後打a.com</a>去run<br />\n<br />\n同埋發現唔記得講dos api 後補"},"citedBy":1,"replyTime":"2021-02-08T01:08:38.000Z","msg":"等我試下有冇bug先"},{"pid":"d83262ffafa88ab612330b9227707984c03faf00","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"quote":{"pid":"215cf5ca03c22dd9d0ee48a87f346e1413619cbc","tid":2399047,"uid":193294,"like":0,"dislike":0,"score":0,"quote":{"pid":"b7f89ac82d81dd548c7cc797f6b447ffb81bfad2","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-07T19:59:49.000Z","msg":"唔記得講點玩ttt<br />\n<br />\n<a href=\"https://handbro.github.io/ttt/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fhandbro.github.io%2Fttt%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=d94953c3\" target=\"_blank\">https://handbro.github.io/ttt/</a><br />\n左上角打code<br />\n右下角係dos <a href=\"http://compile完之後打a.com\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2Fcompile%E5%AE%8C%E4%B9%8B%E5%BE%8C%E6%89%93a.com&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=9b5cceca\" data-auto-link target=\"_blank\">compile完之後打a.com</a>去run<br />\n<br />\n同埋發現唔記得講dos api 後補"},"citedBy":1,"replyTime":"2021-02-08T01:08:38.000Z","msg":"等我試下有冇bug先"},"citedBy":1,"replyTime":"2021-02-08T01:09:28.000Z","msg":"大把bug<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />"},{"pid":"23dbecb37ff14f8972f9d1a35473e22435721b87","tid":2399047,"uid":193294,"like":0,"dislike":0,"score":0,"quote":{"pid":"d83262ffafa88ab612330b9227707984c03faf00","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"quote":{"pid":"215cf5ca03c22dd9d0ee48a87f346e1413619cbc","tid":2399047,"uid":193294,"like":0,"dislike":0,"score":0,"quote":{"pid":"b7f89ac82d81dd548c7cc797f6b447ffb81bfad2","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-07T19:59:49.000Z","msg":"唔記得講點玩ttt<br />\n<br />\n<a href=\"https://handbro.github.io/ttt/\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fhandbro.github.io%2Fttt%2F&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=d94953c3\" target=\"_blank\">https://handbro.github.io/ttt/</a><br />\n左上角打code<br />\n右下角係dos <a href=\"http://compile完之後打a.com\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2Fcompile%E5%AE%8C%E4%B9%8B%E5%BE%8C%E6%89%93a.com&d=wuzGI5SyrIdJ%2FUQuqXTUikzY%2BUnkXQH0zW%2FJu7eEK44%3D&h=9b5cceca\" data-auto-link target=\"_blank\">compile完之後打a.com</a>去run<br />\n<br />\n同埋發現唔記得講dos api 後補"},"citedBy":1,"replyTime":"2021-02-08T01:08:38.000Z","msg":"等我試下有冇bug先"},"citedBy":1,"replyTime":"2021-02-08T01:09:28.000Z","msg":"大把bug<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />"},"citedBy":0,"replyTime":"2021-02-08T02:06:42.000Z","msg":"改&quot;做' 已經收皮<img src=\"/assets/faces/mouse/lihkg.gif\" class=\"hkgmoji\" />"},{"pid":"8d0aa62ebd8298ad8c4fb04beab02a99ea6dd9bb","tid":2399047,"uid":66099,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-08T03:36:33.000Z","msg":"太難，放棄了"},{"pid":"150c9c891692eb6bf342d1a9b7404355ed50465c","tid":2399047,"uid":257658,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-08T05:39:58.000Z","msg":"留名學野."},{"pid":"a1c325287b09f1da41bce1e425e196791d4e2636","tid":2399047,"uid":201604,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-08T05:41:07.000Z","msg":"好勁"},{"pid":"42cef8e670090a2b3f601bb67302fba4fb347ec2","tid":2399047,"uid":345839,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2021-02-08T05:52:33.000Z","msg":"你將簡單既野講得咁複雜, 我諗冇底既人好難有心機睇<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /><br />\n不過留名學野<img src=\"/assets/faces/normal/good.gif\" class=\"hkgmoji\" />"},{"pid":"d2fb06bfd070adbcc3f4910d9f17126919604e65","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"quote":{"pid":"42cef8e670090a2b3f601bb67302fba4fb347ec2","tid":2399047,"uid":345839,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2021-02-08T05:52:33.000Z","msg":"你將簡單既野講得咁複雜, 我諗冇底既人好難有心機睇<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /><br />\n不過留名學野<img src=\"/assets/faces/normal/good.gif\" class=\"hkgmoji\" />"},"citedBy":0,"replyTime":"2021-02-08T05:57:01.000Z","msg":"今次係時間所限<img src=\"/assets/faces/dog/itdog1.gif\" class=\"hkgmoji\" />以前啲講下po我用成個星期整理<br />\n而家份工忙 無得扮工 單單係code都用左兩晚黎dup同debug 根本無時間整理<img src=\"/assets/faces/dog/itdog1.gif\" class=\"hkgmoji\" /><br />\n<br />\n尤其係要望住output個啲machine code去debug 單單debug個if點compile已經用左好幾粒鐘<br />\n又要無得用CMOVcc<br />\n又要自己手殘有個位將if_body[i]寫左做if_body[0]"},{"pid":"6bd6e9042f02d7b591f28bb2dd89baf9d38f8aaf","tid":2399047,"uid":137768,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-08T07:13:11.000Z","msg":"<img src=\"/assets/faces/normal/surprise.gif\" class=\"hkgmoji\" />"},{"pid":"ebfd98331408505a1d44283f7c889534cf0242d8","tid":2399047,"uid":316055,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-02-08T09:53:22.000Z","msg":"Lm"},{"pid":"0096aadf9aca1d15650250d80d5714cf42ac3f63","tid":2399047,"uid":246823,"like":0,"dislike":0,"score":0,"quote":{"pid":"8d0aa62ebd8298ad8c4fb04beab02a99ea6dd9bb","tid":2399047,"uid":66099,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-08T03:36:33.000Z","msg":"太難，放棄了"},"citedBy":0,"replyTime":"2021-02-08T16:38:35.000Z","msg":"你唔努力<img src=\"/assets/faces/pig/pointing.gif\" class=\"hkgmoji\" />"},{"pid":"6b750f53d595f61f8bf97853243642fc9be3df6e","tid":2399047,"uid":329957,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-08T18:15:30.000Z","msg":"咁多野查<br />\n你用咗幾耐時間"},{"pid":"b576fba024873ef7a2017bcc501191535a439b54","tid":2399047,"uid":79869,"like":1,"dislike":0,"score":1,"citedBy":0,"replyTime":"2021-02-08T20:33:58.000Z","msg":"Ruby的作者松本行弘係佢寫既書入面曾經講過, 最簡單創作新PL既方法就係用xml黎寫"},{"pid":"da9c05bcc98d43ebb9d54754ce1ac7ce71a942bc","tid":2399047,"uid":147721,"like":0,"dislike":0,"score":0,"quote":{"pid":"6b750f53d595f61f8bf97853243642fc9be3df6e","tid":2399047,"uid":329957,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-02-08T18:15:30.000Z","msg":"咁多野查<br />\n你用咗幾耐時間"},"citedBy":1,"replyTime":"2021-02-08T22:47:32.000Z","msg":"兩晚"}]}