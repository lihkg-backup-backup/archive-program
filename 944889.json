{"tid":944889,"cid":26,"subCid":0,"title":"有冇programming ching 幫幫手...","createTime":"2018-12-17T12:38:06.000Z","updateTime":"2018-12-23T01:52:28.000Z","uid":194743,"like":2,"dislike":13,"uniUserReply":7,"replies":[{"pid":"452d8a756726553a0178c978ccaee7cfde09fd25","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2018-12-17T12:38:06.000Z","msg":"近排寫C#....<br />\n唔明咩係namespace,partial class,partial method...<br />\nyoutube左都唔明...<br />\n<br />\n寫開php,android.."},{"pid":"90a16e8dc5ea5b1150fdaa4580f079a9404dac60","tid":944889,"uid":99420,"like":0,"dislike":2,"score":-2,"citedBy":0,"replyTime":"2018-12-17T23:57:23.000Z","msg":"此回覆已被刪除"},{"pid":"17ba9086b06a640d0cdb326984b6ac65f68e8217","tid":944889,"uid":79869,"like":0,"dislike":0,"score":0,"quote":{"pid":"452d8a756726553a0178c978ccaee7cfde09fd25","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2018-12-17T12:38:06.000Z","msg":"近排寫C#....<br />\n唔明咩係namespace,partial class,partial method...<br />\nyoutube左都唔明...<br />\n<br />\n寫開php,android.."},"citedBy":0,"replyTime":"2018-12-18T01:27:35.000Z","msg":"Google隨手搵都搵到<br />\n唔難明喎<br />\n<a href=\"https://ithelp.ithome.com.tw/m/articles/10184806\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fithelp.ithome.com.tw%2Fm%2Farticles%2F10184806&d=4fxo2yBMJBQe44kZOiiPxO9M5Ue6CDmcYDZznX2R1Ws%3D&h=ad89e58e\" data-auto-link target=\"_blank\">https://ithelp.ithome.com.tw/m/articles/10184806</a>"},{"pid":"1ad454b019370a1234f8625721b14280da769dc3","tid":944889,"uid":131100,"like":2,"dislike":0,"score":2,"citedBy":1,"replyTime":"2018-12-18T01:45:34.000Z","msg":"namespace 用黎防止同其他 module 撞名<br />\n例如, 你有個 class 叫 Record, 另一個 module 又有個 class Record<br />\n咁就撞左名, 用左 namespace 就唔怕一樣名, 因為大家係唔同 namespace<br />\n<br />\npartial class 簡單黎講就係, 一個 class 分開多個一個 .cs file 寫<br />\n<br />\npartial method 係 partial class 既伸延, 係一個 partial class declare method, 再係另一個 partial class implement"},{"pid":"a783a274de0aa86f3e27b264afcefd28f7b79644","tid":944889,"uid":181283,"like":5,"dislike":0,"score":5,"quote":{"pid":"452d8a756726553a0178c978ccaee7cfde09fd25","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2018-12-17T12:38:06.000Z","msg":"近排寫C#....<br />\n唔明咩係namespace,partial class,partial method...<br />\nyoutube左都唔明...<br />\n<br />\n寫開php,android.."},"citedBy":1,"replyTime":"2018-12-18T01:56:22.000Z","msg":"寫開android點會唔識java<br />\n寫得java基本上同C#就好似<br />\n連namespace class method 都唔識即係唔識基本野<br />\nnamespace =命名空間<br />\n<pre><code data-type=\"\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;</code></pre><br />\n呢堆野就係namespace<br />\n再唔明 係visual studio 到開個console project出黎<br />\n<pre><code data-type=\"\">namespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n        }\n    }\n}\n當你要用入面既野 首先你需要using(即java import)\n\n再講Class 即係類別 咁乜野係類別呀?\n類別算是一個藍圖、一個範本、一個可參考的文件，他沒有 實體 (Instance) 的概念，屬靜態的。\n當如果要產生一個object出黎 呢個時候就需要new class\n即例如 </code></pre><br />\nProgram pro = new Program();<br />\npro.XXXXXXXXXX = XXXXXXX;<br />\n```<br />\nClass就係 裡面包含不同既method 需要用到既時候就係睇method既型態(動態/靜態)去決定需唔需要產生一個物件出黎去使用<br />\n<br />\n<br />\nGoogle下啦 我都唔識program 睇多做多 會明D 雖然我都係半桶水鳩流流<br />\n加油<img src=\"/assets/faces/normal/hoho.gif\" class=\"hkgmoji\" />"},{"pid":"7217b79d45b505e6f12c8d30b135daaf926ba1a8","tid":944889,"uid":181283,"like":1,"dislike":0,"score":1,"quote":{"pid":"a783a274de0aa86f3e27b264afcefd28f7b79644","tid":944889,"uid":181283,"like":5,"dislike":0,"score":5,"quote":{"pid":"452d8a756726553a0178c978ccaee7cfde09fd25","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2018-12-17T12:38:06.000Z","msg":"近排寫C#....<br />\n唔明咩係namespace,partial class,partial method...<br />\nyoutube左都唔明...<br />\n<br />\n寫開php,android.."},"citedBy":1,"replyTime":"2018-12-18T01:56:22.000Z","msg":"寫開android點會唔識java<br />\n寫得java基本上同C#就好似<br />\n連namespace class method 都唔識即係唔識基本野<br />\nnamespace =命名空間<br />\n<pre><code data-type=\"\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;</code></pre><br />\n呢堆野就係namespace<br />\n再唔明 係visual studio 到開個console project出黎<br />\n<pre><code data-type=\"\">namespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n        }\n    }\n}\n當你要用入面既野 首先你需要using(即java import)\n\n再講Class 即係類別 咁乜野係類別呀?\n類別算是一個藍圖、一個範本、一個可參考的文件，他沒有 實體 (Instance) 的概念，屬靜態的。\n當如果要產生一個object出黎 呢個時候就需要new class\n即例如 </code></pre><br />\nProgram pro = new Program();<br />\npro.XXXXXXXXXX = XXXXXXX;<br />\n```<br />\nClass就係 裡面包含不同既method 需要用到既時候就係睇method既型態(動態/靜態)去決定需唔需要產生一個物件出黎去使用<br />\n<br />\n<br />\nGoogle下啦 我都唔識program 睇多做多 會明D 雖然我都係半桶水鳩流流<br />\n加油<img src=\"/assets/faces/normal/hoho.gif\" class=\"hkgmoji\" />"},"citedBy":2,"replyTime":"2018-12-18T02:06:27.000Z","msg":"Sorry 自膠先 睇唔到 <strong><span style=\"color: red;\">partial class,partial method</span></strong><br />\npartial 即係咁樣<br />\n呢到有D例子<br />\nclass1.cs有以下代碼<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    partial class Partial_class\n    {\n        private int x;\n\n        public int get_x()\n        {\n            return x;\n        }\n\n        public void set_x(int x)\n        {\n            this.x = x;\n        }\n    }\n}</code></pre><br />\nclass2.cs有以下代碼<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    partial class Partial_class\n    {\n        private int y;\n\n        public int get_y()\n        {\n            return y;\n        }\n\n        public void set_y(int y)\n        {\n            this.y = y;\n        }\n    }\n}</code></pre><br />\n最後要做野既test.cs<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    class test\n    {\n        public static void Main()\n        {\n            Partial_class obj = new Partial_class();\n\n            obj.set_x(10);\n            obj.set_y(20);\n\n            Console.WriteLine(obj.get_x());\n            Console.WriteLine(obj.get_y());\n\n            Console.Read();\n\n        }\n    }\n}</code></pre><br />\n都係方便多人協作同大型野用"},{"pid":"c64646386de3ad52551ab4bec63118690d8e96a5","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"quote":{"pid":"7217b79d45b505e6f12c8d30b135daaf926ba1a8","tid":944889,"uid":181283,"like":1,"dislike":0,"score":1,"quote":{"pid":"a783a274de0aa86f3e27b264afcefd28f7b79644","tid":944889,"uid":181283,"like":5,"dislike":0,"score":5,"quote":{"pid":"452d8a756726553a0178c978ccaee7cfde09fd25","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2018-12-17T12:38:06.000Z","msg":"近排寫C#....<br />\n唔明咩係namespace,partial class,partial method...<br />\nyoutube左都唔明...<br />\n<br />\n寫開php,android.."},"citedBy":1,"replyTime":"2018-12-18T01:56:22.000Z","msg":"寫開android點會唔識java<br />\n寫得java基本上同C#就好似<br />\n連namespace class method 都唔識即係唔識基本野<br />\nnamespace =命名空間<br />\n<pre><code data-type=\"\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;</code></pre><br />\n呢堆野就係namespace<br />\n再唔明 係visual studio 到開個console project出黎<br />\n<pre><code data-type=\"\">namespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n        }\n    }\n}\n當你要用入面既野 首先你需要using(即java import)\n\n再講Class 即係類別 咁乜野係類別呀?\n類別算是一個藍圖、一個範本、一個可參考的文件，他沒有 實體 (Instance) 的概念，屬靜態的。\n當如果要產生一個object出黎 呢個時候就需要new class\n即例如 </code></pre><br />\nProgram pro = new Program();<br />\npro.XXXXXXXXXX = XXXXXXX;<br />\n```<br />\nClass就係 裡面包含不同既method 需要用到既時候就係睇method既型態(動態/靜態)去決定需唔需要產生一個物件出黎去使用<br />\n<br />\n<br />\nGoogle下啦 我都唔識program 睇多做多 會明D 雖然我都係半桶水鳩流流<br />\n加油<img src=\"/assets/faces/normal/hoho.gif\" class=\"hkgmoji\" />"},"citedBy":2,"replyTime":"2018-12-18T02:06:27.000Z","msg":"Sorry 自膠先 睇唔到 <strong><span style=\"color: red;\">partial class,partial method</span></strong><br />\npartial 即係咁樣<br />\n呢到有D例子<br />\nclass1.cs有以下代碼<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    partial class Partial_class\n    {\n        private int x;\n\n        public int get_x()\n        {\n            return x;\n        }\n\n        public void set_x(int x)\n        {\n            this.x = x;\n        }\n    }\n}</code></pre><br />\nclass2.cs有以下代碼<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    partial class Partial_class\n    {\n        private int y;\n\n        public int get_y()\n        {\n            return y;\n        }\n\n        public void set_y(int y)\n        {\n            this.y = y;\n        }\n    }\n}</code></pre><br />\n最後要做野既test.cs<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    class test\n    {\n        public static void Main()\n        {\n            Partial_class obj = new Partial_class();\n\n            obj.set_x(10);\n            obj.set_y(20);\n\n            Console.WriteLine(obj.get_x());\n            Console.WriteLine(obj.get_y());\n\n            Console.Read();\n\n        }\n    }\n}</code></pre><br />\n都係方便多人協作同大型野用"},"citedBy":0,"replyTime":"2018-12-18T10:01:23.000Z","msg":"明白...唔該ching<img src=\"/assets/faces/xm/hoho.gif\" class=\"hkgmoji\" />"},{"pid":"8127a65597a82e090cd58a80b4c7d4539331ec02","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"quote":{"pid":"1ad454b019370a1234f8625721b14280da769dc3","tid":944889,"uid":131100,"like":2,"dislike":0,"score":2,"citedBy":1,"replyTime":"2018-12-18T01:45:34.000Z","msg":"namespace 用黎防止同其他 module 撞名<br />\n例如, 你有個 class 叫 Record, 另一個 module 又有個 class Record<br />\n咁就撞左名, 用左 namespace 就唔怕一樣名, 因為大家係唔同 namespace<br />\n<br />\npartial class 簡單黎講就係, 一個 class 分開多個一個 .cs file 寫<br />\n<br />\npartial method 係 partial class 既伸延, 係一個 partial class declare method, 再係另一個 partial class implement"},"citedBy":0,"replyTime":"2018-12-18T10:02:19.000Z","msg":"<img src=\"/assets/faces/xm/hoho.gif\" class=\"hkgmoji\" />  thx ching <img src=\"/assets/faces/xm/hoho.gif\" class=\"hkgmoji\" />"},{"pid":"f9fdc3e76060a46d3bb20efe22703d9f3155465f","tid":944889,"uid":37796,"like":1,"dislike":0,"score":1,"citedBy":0,"replyTime":"2018-12-21T05:06:17.000Z","msg":"php 都有namespace 架wo<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />"},{"pid":"afcdbc4d427d6988296a1d61afed4731557d5aa9","tid":944889,"uid":189937,"like":0,"dislike":0,"score":0,"quote":{"pid":"7217b79d45b505e6f12c8d30b135daaf926ba1a8","tid":944889,"uid":181283,"like":1,"dislike":0,"score":1,"quote":{"pid":"a783a274de0aa86f3e27b264afcefd28f7b79644","tid":944889,"uid":181283,"like":5,"dislike":0,"score":5,"quote":{"pid":"452d8a756726553a0178c978ccaee7cfde09fd25","tid":944889,"uid":194743,"like":0,"dislike":0,"score":0,"citedBy":2,"replyTime":"2018-12-17T12:38:06.000Z","msg":"近排寫C#....<br />\n唔明咩係namespace,partial class,partial method...<br />\nyoutube左都唔明...<br />\n<br />\n寫開php,android.."},"citedBy":1,"replyTime":"2018-12-18T01:56:22.000Z","msg":"寫開android點會唔識java<br />\n寫得java基本上同C#就好似<br />\n連namespace class method 都唔識即係唔識基本野<br />\nnamespace =命名空間<br />\n<pre><code data-type=\"\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;</code></pre><br />\n呢堆野就係namespace<br />\n再唔明 係visual studio 到開個console project出黎<br />\n<pre><code data-type=\"\">namespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n        }\n    }\n}\n當你要用入面既野 首先你需要using(即java import)\n\n再講Class 即係類別 咁乜野係類別呀?\n類別算是一個藍圖、一個範本、一個可參考的文件，他沒有 實體 (Instance) 的概念，屬靜態的。\n當如果要產生一個object出黎 呢個時候就需要new class\n即例如 </code></pre><br />\nProgram pro = new Program();<br />\npro.XXXXXXXXXX = XXXXXXX;<br />\n```<br />\nClass就係 裡面包含不同既method 需要用到既時候就係睇method既型態(動態/靜態)去決定需唔需要產生一個物件出黎去使用<br />\n<br />\n<br />\nGoogle下啦 我都唔識program 睇多做多 會明D 雖然我都係半桶水鳩流流<br />\n加油<img src=\"/assets/faces/normal/hoho.gif\" class=\"hkgmoji\" />"},"citedBy":2,"replyTime":"2018-12-18T02:06:27.000Z","msg":"Sorry 自膠先 睇唔到 <strong><span style=\"color: red;\">partial class,partial method</span></strong><br />\npartial 即係咁樣<br />\n呢到有D例子<br />\nclass1.cs有以下代碼<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    partial class Partial_class\n    {\n        private int x;\n\n        public int get_x()\n        {\n            return x;\n        }\n\n        public void set_x(int x)\n        {\n            this.x = x;\n        }\n    }\n}</code></pre><br />\nclass2.cs有以下代碼<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    partial class Partial_class\n    {\n        private int y;\n\n        public int get_y()\n        {\n            return y;\n        }\n\n        public void set_y(int y)\n        {\n            this.y = y;\n        }\n    }\n}</code></pre><br />\n最後要做野既test.cs<br />\n<pre><code data-type=\"\">using System;\n\nnamespace ConsoleApplication1\n{\n    class test\n    {\n        public static void Main()\n        {\n            Partial_class obj = new Partial_class();\n\n            obj.set_x(10);\n            obj.set_y(20);\n\n            Console.WriteLine(obj.get_x());\n            Console.WriteLine(obj.get_y());\n\n            Console.Read();\n\n        }\n    }\n}</code></pre><br />\n都係方便多人協作同大型野用"},"citedBy":0,"replyTime":"2018-12-23T01:52:28.000Z","msg":"係C#仲咁樣寫getter setter<img src=\"/assets/faces/normal/dead.gif\" class=\"hkgmoji\" />"}]}