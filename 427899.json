{"tid":427899,"cid":26,"subCid":0,"title":"C# 求清concept : interface, abstract, reflection, assembly","createTime":"2017-10-07T16:43:33.000Z","updateTime":"2017-10-11T01:06:12.000Z","uid":24409,"like":3,"dislike":0,"uniUserReply":9,"replies":[{"pid":"07c138f325f8ef779e7db4c5c0984e7125e5cfb1","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T16:43:33.000Z","msg":"最近自學C#，有D野想清下concept先繼續學落去，好多都Google咗好耐都諗唔明，求各巴打指教<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n1）首先係class + interface + abstract ，我既理解係 class可以inheritance from class/interface/abstract 。 之前睇過個例子我覺得講得幾好 : <br />\na) classA : classB &lt;&lt;&lt;&lt; 可以睇成classA &quot;is a&quot; classB , eg: 的士 is a 汔車 <br />\n<br />\nb) classA : abstractB &lt;&lt;&lt;&lt; abstract係D抽像既野，cannot instantiate an object from it , eg: 三角形 : 形狀 。 <br />\n<br />\nc) classA :  interfaceA &lt;&lt;&lt;&lt; interface係D額外既，無乜直接關聯既功能。eg: 想係的士加個收費功能，但私家車唔需要依樣功能，所以用interface.<br />\n<br />\n以上係我對inheritance class/interface/abstract既理解，請指證有無錯誤<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> 。 另外，interface我都叫明，但我想問下點解要有abstract既出現？其實佢做既野唔係都可以用inheritance class做到？ <br />\n<br />\n2）之後想問reflection + assembly ，睇左好多解釋都係將佢地兩樣一齊講，但其實我一路都唔明佢地點用同點解要存在，可唔可以簡單講一講點用。<br />\n我見成日話reflection 好處係run緊既時候可以動態咁運行定攞資料.... 我真係完全黑人問號<img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" />  咁如果寫個class,唔係一樣可以call到黎用？ 定我誤會左佢既用法？ <br />\n另外assembly我又係唔明點解要係class前面加[xxxxxxxxxx] 然後又係call d野黎run? 點解唔寫個class黎做？<br />\n<br />\nreflection同assembly 我真係頭都大埋，求各巴打指教<img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" />"},{"pid":"d3a89b45776e977a9e31b041e9d79b64eacb0e76","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T16:45:42.000Z","msg":"sorry 上面講既應該係 attribute , 唔係assembly...."},{"pid":"fc035464eb1350ec8dac2d0c37fe6fc7960cb84f","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:14:13.000Z","msg":"<img src=\"/assets/faces/normal/@.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/@.gif\" class=\"hkgmoji\" />"},{"pid":"05453ac35cbbeff0f8107c59bd3dda8d610e1506","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:27:46.000Z","msg":"<blockquote>最近自學C#，有D野想清下concept先繼續學落去，好多都Google咗好耐都諗唔明，求各巴打指教<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n1）首先係class + interface + abstract ，我既理解係 class可以inheritance from class/interface/abstract 。 之前睇過個例子我覺得講得幾好 : <br />\na) classA : classB &lt;&lt;&lt;&lt; 可以睇成classA &quot;is a&quot; classB , eg: 的士 is a 汔車 <br />\n<br />\nb) classA : abstractB &lt;&lt;&lt;&lt; abstract係D抽像既野，cannot instantiate an object from it , eg: 三角形 : 形狀 。 <br />\n<br />\nc) classA :  interfaceA &lt;&lt;&lt;&lt; interface係D額外既，無乜直接關聯既功能。eg: 想係的士加個收費功能，但私家車唔需要依樣功能，所以用interface.<br />\n<br />\n以上係我對inheritance class/interface/abstract既理解，請指證有無錯誤<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> 。 另外，interface我都叫明，但我想問下點解要有abstract既出現？其實佢做既野唔係都可以用inheritance class做到？ <br />\n<br />\n2）之後想問reflection + assembly ，睇左好多解釋都係將佢地兩樣一齊講，但其實我一路都唔明佢地點用同點解要存在，可唔可以簡單講一講點用。<br />\n我見成日話reflection 好處係run緊既時候可以動態咁運行定攞資料.... 我真係完全黑人問號<img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/wonder.gif\" class=\"hkgmoji\" />  咁如果寫個class,唔係一樣可以call到黎用？ 定我誤會左佢既用法？ <br />\n另外assembly我又係唔明點解要係class前面加[xxxxxxxxxx] 然後又係call d野黎run? 點解唔寫個class黎做？<br />\n<br />\nreflection同assembly 我真係頭都大埋，求各巴打指教<img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" /></blockquote><br />\n<br />\nabstract 你可以當係未完整既 class, 所以入面可以有 D method 係未 implement, 其餘分別唔大<br />\n<br />\ninterface 係唔可以有 data field member 只可以有 method, 係因為 multiple inheritance 既問題, 不過如果無 data field 就唔會有問題"},{"pid":"c1cbd9a7f5ca59bdcb5078a361d56560550414f2","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:32:04.000Z","msg":"<blockquote><br />\n<br />\nabstract 你可以當係未完整既 class, 所以入面可以有 D method 係未 implement, 其餘分別唔大<br />\n<br />\ninterface 係唔可以有 data field member 只可以有 method, 係因為 multiple inheritance 既問題, 不過如果無 data field 就唔會有問題</blockquote><br />\n<br />\n<br />\nabstract 有未implement 既method 有咩特別？ 一般咩情況底下會用到abstract?<br />\n<br />\ninterface,  data field 即係string int 個D？ method入面唔會用到咩？"},{"pid":"f9af85222ec7ecedf42e463513a54515e1aa8518","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:34:19.000Z","msg":"而 reflection 可以用依個例子<br />\n<br />\nclass A {<br />\npublic int a = 1;<br />\npublic int b = 2;<br />\n}<br />\n<br />\nclass B {<br />\npublic int c = 3;<br />\npublic int d = 4;<br />\npublic int e = 5;<br />\n}<br />\n<br />\nclass MyLog {<br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\nstatic public dump(A a) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\nstatic public dump(B b) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\n}<br />\n<br />\n<br />\n<br />\nA a = new A();<br />\nB b = new B();<br />\n<br />\ndump(a);<br />\ndump(b);"},{"pid":"195e926244aae1ad70e2f09bec34a9405dc57b5a","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:40:00.000Z","msg":"<blockquote>而 reflection 可以用依個例子<br />\n<br />\nclass A {<br />\npublic int a = 1;<br />\npublic int b = 2;<br />\n}<br />\n<br />\nclass B {<br />\npublic int c = 3;<br />\npublic int d = 4;<br />\npublic int e = 5;<br />\n}<br />\n<br />\nclass MyLog {<br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\nstatic public dump(A a) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\nstatic public dump(B b) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\n}<br />\n<br />\n<br />\n<br />\nA a = new A();<br />\nB b = new B();<br />\n<br />\ndump(a);<br />\ndump(b);</blockquote><br />\n<br />\nthx 巴打<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n但我都有D唔明，reflection 係一仲技術名稱or what? <br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\n&lt;&lt;&lt;&lt; 依段野就係叫reflection? 佢dump(a)出黎會係D咩？ a=1 b=2 ?<br />\nGetType , GetFields 係咩黎啊<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />"},{"pid":"752d9cf74a95e30048db0ae112b12d4244bbef79","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:42:36.000Z","msg":"<blockquote><blockquote><br />\n<br />\nabstract 你可以當係未完整既 class, 所以入面可以有 D method 係未 implement, 其餘分別唔大<br />\n<br />\ninterface 係唔可以有 data field member 只可以有 method, 係因為 multiple inheritance 既問題, 不過如果無 data field 就唔會有問題</blockquote><br />\n<br />\n<br />\nabstract 有未implement 既method 有咩特別？ 一般咩情況底下會用到abstract?<br />\n<br />\n</blockquote><br />\n<br />\n無未特別, 就係可以唔 implement, 好處就係如果另一個 class base on abstract 就一定要 implement 返個 method, 如果唔係過唔到 compile, 你可以當係提你一定要 implement 依個 method.<br />\n<br />\n個 result 就係咁, 概念背後就係有 D &quot;class&quot; 係底層, 因為仲未知點 implement, 當然你係可以是但 implement or 出 error, 但係 C# / Java 就加左你樣野, 咁就直頭唔駛 implement<br />\n<br />\n所以同 class 其實唔係咁大分別<br />\n<br />\n<br />\n<blockquote> data field 即係string int 個D？ method入面唔會用到咩？</blockquote><br />\n係, interface 其實係再嚴格 D 既 abstract, 就係連 data fields 都無, 同埋所有 method 都係未 implement"},{"pid":"14046370a975ea291ef10e24137c01cf6ab3cf42","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:46:50.000Z","msg":"<blockquote><blockquote>而 reflection 可以用依個例子<br />\n<br />\nclass A {<br />\npublic int a = 1;<br />\npublic int b = 2;<br />\n}<br />\n<br />\nclass B {<br />\npublic int c = 3;<br />\npublic int d = 4;<br />\npublic int e = 5;<br />\n}<br />\n<br />\nclass MyLog {<br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\nstatic public dump(A a) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\nstatic public dump(B b) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\n}<br />\n<br />\n<br />\n<br />\nA a = new A();<br />\nB b = new B();<br />\n<br />\ndump(a);<br />\ndump(b);</blockquote><br />\n<br />\nthx 巴打<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n但我都有D唔明，reflection 係一仲技術名稱or what? <br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\n&lt;&lt;&lt;&lt; 依段野就係叫reflection? 佢dump(a)出黎會係D咩？ a=1 b=2 ?<br />\nGetType , GetFields 係咩黎啊<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /></blockquote><br />\n<br />\nvar type = o.GetType();  &lt;--- dump(a)  時, 因為 o 係 Class A, 咁 type 會係 Class A 既 type info<br />\n<br />\ntype.GetFields() 會拎到 Class A 既所有 field info, 即係有個 field 叫 a, 而且 type 係 int, 另外仲有個 field 叫 b,  如此類推<br />\n<br />\n之後你可以用個 field info 去拎 object o 既 value"},{"pid":"97989ac00a422fc6baa8dc9a7871e312b3fcaffb","tid":427899,"uid":43842,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:48:24.000Z","msg":"1. <br />\nInterface - 9upper, 講明繼承佢既class會有d乜function存在同有乜用 但佢入面唔洗寫任何logic 用係描述功能多<br />\n簡單d講同說明書差唔多<br />\n<br />\nAbstract - 講少少你就做埋佢<br />\n用得abstract即代表兩者間有關係<br />\n<br />\n一個class可以有好多個interface, 但只可以有一個Abstract<br />\n<br />\n2. Reflection多數係compile完左後先會用到<br />\n因為佢係runtime先會行<br />\n<br />\n*其實碌入去RnD做兩三個月你就明點解會用到interface/abstract"},{"pid":"361c384c516c476e9aba2c699f295b247ebd59b3","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:50:19.000Z","msg":"係, 拎下 type info, field info, method info 就係 reflection,<br />\n而 attribute 就係可以俾你加多D info 係 field info, type info 入面<br />\n<br />\n所以 attribute value 係 per type or per field 而唔係 per object instance"},{"pid":"9f7ad4aa38e937f533a603220d898b0be3f2b5f0","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:54:13.000Z","msg":"<blockquote><blockquote><blockquote>而 reflection 可以用依個例子<br />\n<br />\nclass A {<br />\npublic int a = 1;<br />\npublic int b = 2;<br />\n}<br />\n<br />\nclass B {<br />\npublic int c = 3;<br />\npublic int d = 4;<br />\npublic int e = 5;<br />\n}<br />\n<br />\nclass MyLog {<br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\nstatic public dump(A a) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\nstatic public dump(B b) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\n}<br />\n<br />\n<br />\n<br />\nA a = new A();<br />\nB b = new B();<br />\n<br />\ndump(a);<br />\ndump(b);</blockquote><br />\n<br />\nthx 巴打<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n但我都有D唔明，reflection 係一仲技術名稱or what? <br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\n&lt;&lt;&lt;&lt; 依段野就係叫reflection? 佢dump(a)出黎會係D咩？ a=1 b=2 ?<br />\nGetType , GetFields 係咩黎啊<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /></blockquote><br />\n<br />\nvar type = o.GetType();  &lt;--- dump(a)  時, 因為 o 係 Class A, 咁 type 會係 Class A 既 type info<br />\n<br />\ntype.GetFields() 會拎到 Class A 既所有 field info, 即係有個 field 叫 a, 而且 type 係 int, 另外仲有個 field 叫 b,  如此類推<br />\n<br />\n之後你可以用個 field info 去拎 object o 既 value</blockquote><br />\n<br />\n明白了<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />  好處係唔洗分別寫兩個分法去dump(a) dump(b), 可以用getType去搶入面D field info? 依樣野叫reflection ?  <br />\n咁其實如果真係自己寫program , 唔係分開黎寫會清𥇦D同快D？ <br />\n同埋點解會話係 &quot;&quot;反射&quot;<a href=\"http://是.NET\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2F%E6%98%AF.NET&d=sYciqWR0qE%2Fb64lOkGl%2FAZUc5Mn1qk%2F8nAzLhrzJJK4%3D&h=8067ad59\" data-auto-link target=\"_blank\">是.NET</a>中的重要技术，通过反射，可以在运行时获得某个类型的各种信息，进而动态的创建对象实例，完成方法调用，属性设置和事件激发。&quot; （sorry 殘體字<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> )<br />\n<br />\n照咁睇都無係&quot;運行時獲得&quot;？"},{"pid":"bf1c07f956a33e91b4a5754847024a808a41f822","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:56:51.000Z","msg":"<blockquote>1. <br />\nInterface - 9upper, 講明繼承佢既class會有d乜function存在同有乜用 但佢入面唔洗寫任何logic 用係描述功能多<br />\n簡單d講同說明書差唔多<br />\n<br />\nAbstract - 講少少你就做埋佢<br />\n用得abstract即代表兩者間有關係<br />\n<br />\n一個class可以有好多個interface, 但只可以有一個Abstract<br />\n<br />\n2. Reflection多數係compile完左後先會用到<br />\n因為佢係runtime先會行<br />\n<br />\n*其實碌入去RnD做兩三個月你就明點解會用到interface/abstract</blockquote><br />\n<br />\n咩叫係runtime先行啊巴打，如果有error compile個時知唔知架？<br />\n<br />\n純自學 應該無咩機會唔會入RnD做<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />"},{"pid":"ddbbed11a2a36032983a48d9ae1592fc01e7118c","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T17:59:14.000Z","msg":"<blockquote>係, 拎下 type info, field info, method info 就係 reflection,<br />\n而 attribute 就係可以俾你加多D info 係 field info, type info 入面<br />\n<br />\n所以 attribute value 係 per type or per field 而唔係 per object instance</blockquote><br />\n<br />\n好似明明地，即係平時寫class個D係 正路野，<br />\n如果想加D額外野就用attribute, 佢加既地方就係field info type info 入面，拎返D資料出黎既方法就係reflection ( get type field info) ？<br />\n<br />\n咁點解我唔直接寫返正路野，用new class 既返法拎返出黎而要用attribute+reflection?"},{"pid":"202bd746cf10565c7b301c93b69aaa384119d680","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T18:04:51.000Z","msg":"<blockquote><blockquote><blockquote><blockquote>而 reflection 可以用依個例子<br />\n<br />\nclass A {<br />\npublic int a = 1;<br />\npublic int b = 2;<br />\n}<br />\n<br />\nclass B {<br />\npublic int c = 3;<br />\npublic int d = 4;<br />\npublic int e = 5;<br />\n}<br />\n<br />\nclass MyLog {<br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\nstatic public dump(A a) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\nstatic public dump(B b) {<br />\n//如果唔係你要每個 type 做一次<br />\n}<br />\n<br />\n}<br />\n<br />\n<br />\n<br />\nA a = new A();<br />\nB b = new B();<br />\n<br />\ndump(a);<br />\ndump(b);</blockquote><br />\n<br />\nthx 巴打<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n但我都有D唔明，reflection 係一仲技術名稱or what? <br />\n<br />\nstatic public dump(object o) {<br />\n   var type = o.GetType();<br />\n   foreach (var f : type.GetFields()) {<br />\n    // 如果有 reflection 就可以 loop 晒所有 fields, 即使唔知係咩 type<br />\n   }<br />\n}<br />\n<br />\n&lt;&lt;&lt;&lt; 依段野就係叫reflection? 佢dump(a)出黎會係D咩？ a=1 b=2 ?<br />\nGetType , GetFields 係咩黎啊<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /></blockquote><br />\n<br />\nvar type = o.GetType();  &lt;--- dump(a)  時, 因為 o 係 Class A, 咁 type 會係 Class A 既 type info<br />\n<br />\ntype.GetFields() 會拎到 Class A 既所有 field info, 即係有個 field 叫 a, 而且 type 係 int, 另外仲有個 field 叫 b,  如此類推<br />\n<br />\n之後你可以用個 field info 去拎 object o 既 value</blockquote><br />\n<br />\n明白了<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />  好處係唔洗分別寫兩個分法去dump(a) dump(b), 可以用getType去搶入面D field info? 依樣野叫reflection ?  <br />\n咁其實如果真係自己寫program , 唔係分開黎寫會清𥇦D同快D？ <br />\n同埋點解會話係 &quot;&quot;反射&quot;<a href=\"http://是.NET\" data-sr-url=\"https://r.lihkg.com/link?u=http%3A%2F%2F%E6%98%AF.NET&d=sYciqWR0qE%2Fb64lOkGl%2FAZUc5Mn1qk%2F8nAzLhrzJJK4%3D&h=8067ad59\" data-auto-link target=\"_blank\">是.NET</a>中的重要技术，通过反射，可以在运行时获得某个类型的各种信息，进而动态的创建对象实例，完成方法调用，属性设置和事件激发。&quot; （sorry 殘體字<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> )<br />\n<br />\n照咁睇都無係&quot;運行時獲得&quot;？</blockquote><br />\n<br />\nvar type = GetType(); &lt;-- 去到 runtime 時先知係咩 type 就係咁既意思"},{"pid":"0c7a9546cd829350fbe581242c9b9a71dbc3c399","tid":427899,"uid":43842,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T18:05:29.000Z","msg":"<blockquote><blockquote>1. <br />\nInterface - 9upper, 講明繼承佢既class會有d乜function存在同有乜用 但佢入面唔洗寫任何logic 用係描述功能多<br />\n簡單d講同說明書差唔多<br />\n<br />\nAbstract - 講少少你就做埋佢<br />\n用得abstract即代表兩者間有關係<br />\n<br />\n一個class可以有好多個interface, 但只可以有一個Abstract<br />\n<br />\n2. Reflection多數係compile完左後先會用到<br />\n因為佢係runtime先會行<br />\n<br />\n*其實碌入去RnD做兩三個月你就明點解會用到interface/abstract</blockquote><br />\n<br />\n咩叫係runtime先行啊巴打，如果有error compile個時知唔知架？<br />\n<br />\n純自學 應該無咩機會唔會入RnD做<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /></blockquote><br />\nReflection 以program角度黎睇<br />\n佢一日未行到 佢自己都唔知會拎到d乜<br />\n無記錯compile果陣你同個program唔知有無錯<br />\n實際要runtime果陣先知<br />\n<br />\n講多個reflection例子：<br />\nThrow error果陣既trace log<br />\n<br />\n<br />\n突然再醒起一個interface例子：<br />\nIEnumerable&lt;T&gt; &lt;---<br />\n佢係一個講明引用佢既集合class都有相同方法去搵/排列你想要既<br />\n而引用到佢既包括有Listing, Dictionary, Collection<br />\n佢地三個可以比你用同一個function去做返相同既野<br />\n但佢地三個集合性質方法本身唔同/無關係 所以呢個位無得用abstract"},{"pid":"7cca86fda2fe6dcc17f7f89789e830d830dbda7e","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T18:08:21.000Z","msg":"<blockquote><blockquote>係, 拎下 type info, field info, method info 就係 reflection,<br />\n而 attribute 就係可以俾你加多D info 係 field info, type info 入面<br />\n<br />\n所以 attribute value 係 per type or per field 而唔係 per object instance</blockquote><br />\n<br />\n好似明明地，即係平時寫class個D係 正路野，<br />\n如果想加D額外野就用attribute, 佢加既地方就係field info type info 入面，拎返D資料出黎既方法就係reflection ( get type field info) ？<br />\n<br />\n咁點解我唔直接寫返正路野，用new class 既返法拎返出黎而要用attribute+reflection?</blockquote><br />\n<br />\n例如你想將 D 野 save 去 file, 用 reflection 既話, 你只要寫一次, 就咩 type 都 support 到<br />\n<br />\n而 attribute 係依個 case 可以咁用<br />\n<br />\nclass MyData {<br />\npublic int a;<br />\npublic int b;<br />\n<br />\n[DontSaveToFileAttribute] &lt;--咁你可以 loop field info 時 check 下有無依個 attr, 有就唔 write 落 file<br />\npublic int _temp;<br />\n}"},{"pid":"3a65d9fbabab915fd78fcace4cb2878b1c61a0bf","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T18:13:23.000Z","msg":"多謝兩位巴打相助<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> 明多咗 等我返去消化下先<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n有無咩教學網分享下 而家唔係好有系統咁學緊<img src=\"/assets/faces/normal/dislike.gif\" class=\"hkgmoji\" /> <br />\n有好多野都未識，例如頭先巴打講個D IEnum 成日都見到有D IXXXX 其實係咩我都唔係好識<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />"},{"pid":"d28c2f3c69322a80be87492d28c87df9f052353c","tid":427899,"uid":43842,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T18:22:10.000Z","msg":"<blockquote>多謝兩位巴打相助<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> 明多咗 等我返去消化下先<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n有無咩教學網分享下 而家唔係好有系統咁學緊<img src=\"/assets/faces/normal/dislike.gif\" class=\"hkgmoji\" /> <br />\n有好多野都未識，例如頭先巴打講個D IEnum 成日都見到有D IXXXX 其實係咩我都唔係好識<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /></blockquote><br />\nC# 最好既教學都係直接睇M$ document同埋佢果堆library<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /><br />\n有問題果陣再搵都唔遲 最緊要諗下自己想整d乜黎keep住自己熱誠仲好<br />\n<br />\n另外如果你見到果d Ixxxxxx <br />\n多數係Interface黎 逢親寫interface都一定會加I係前面<br />\n得閒F12入去望下 咁你就知果舊object可以點用<br />\n<br />\nReflection其實好少情況會真正用到<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <br />\n現階段可以無視佢"},{"pid":"83938ec6808969e62ea8f8f00b4d1c03c4c979f0","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T18:27:02.000Z","msg":"<blockquote><blockquote>多謝兩位巴打相助<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> 明多咗 等我返去消化下先<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" /> <br />\n<br />\n有無咩教學網分享下 而家唔係好有系統咁學緊<img src=\"/assets/faces/normal/dislike.gif\" class=\"hkgmoji\" /> <br />\n有好多野都未識，例如頭先巴打講個D IEnum 成日都見到有D IXXXX 其實係咩我都唔係好識<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /></blockquote><br />\nC# 最好既教學都係直接睇M$ document同埋佢果堆library<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /><br />\n有問題果陣再搵都唔遲 最緊要諗下自己想整d乜黎keep住自己熱誠仲好<br />\n<br />\n另外如果你見到果d Ixxxxxx <br />\n多數係Interface黎 逢親寫interface都一定會加I係前面<br />\n得閒F12入去望下 咁你就知果舊object可以點用<br />\n<br />\nReflection其實好少情況會真正用到<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" /> <br />\n現階段可以無視佢</blockquote><br />\n<img src=\"/assets/faces/normal/adore.gif\" class=\"hkgmoji\" />  好啊多謝巴打"},{"pid":"9def7ef946c6eb3f38d1944c19c11671671b160c","tid":427899,"uid":131100,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-07T18:45:10.000Z","msg":"睇你進度幾好呀, 加油呀<br />\n<br />\n另外可以考慮買書, eBook 都好, 始終書比較 step by step, 上網搵可能好零碎"},{"pid":"756588657594905ba9b532d9f012f97a1b1fa2eb","tid":427899,"uid":65859,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-08T02:50:09.000Z","msg":"Reflection performance-wise 係慢，好多 framework 都開始唔用。"},{"pid":"7243c6ee81b5da7350e8865123ed474588aa9490","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-08T03:33:02.000Z","msg":"<blockquote>Reflection performance-wise 係慢，好多 framework 都開始唔用。</blockquote><br />\n<br />\n如果唔用佢地會用咩取代？"},{"pid":"855510bd6a0b013a0e7c1bde498aac34d2ed958d","tid":427899,"uid":24409,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-08T03:34:19.000Z","msg":"<blockquote>睇你進度幾好呀, 加油呀<br />\n<br />\n另外可以考慮買書, eBook 都好, 始終書比較 step by step, 上網搵可能好零碎</blockquote><br />\n<br />\n我睇D YOUTUBE教學同網上D入門教學JA<br />\n有咩書好介紹 ，因為諗住會用xamarin, 所以睇緊佢官方本書"},{"pid":"e07ee4ac200743b9653ef3eae8e98813520a71a7","tid":427899,"uid":23953,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2017-10-08T06:29:45.000Z","msg":"<blockquote>Reflection performance-wise 係慢，好多 framework 都開始唔用。</blockquote><br />\n其他 language 愈黎愈多 framework 用reflection<img src=\"/assets/faces/normal/sosad.gif\" class=\"hkgmoji\" />"}]}