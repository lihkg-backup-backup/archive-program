{"tid":968548,"cid":22,"subCid":0,"title":"點解好多人都話Desktop專用的128bit CPU要等多100年以上先有？","createTime":"2019-01-04T10:21:30.000Z","updateTime":"2019-01-04T11:00:00.000Z","uid":100680,"like":1,"dislike":0,"uniUserReply":5,"replies":[{"pid":"ae33cae83f3e03677cbfde80b352de6ad7a005a2","tid":968548,"uid":100680,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2019-01-04T10:21:30.000Z","msg":"10年前仲流行緊32bit cpu<br />\n而家市面上幾乎清一色64bit<br />\n咁128bit cpu理應好快就會研發到出黎<br />\n但係我睇過好多外國IT forum，什至台灣IT forum 佢地個個都話128bit起碼等多100年先有得買<br />\n其實究竟有d咩技術障礙?<img src=\"/assets/faces/xm/wonder.gif\" class=\"hkgmoji\" />"},{"pid":"ef1f45898a69ae25e95399b112168382052f59f2","tid":968548,"uid":101417,"like":5,"dislike":1,"score":4,"citedBy":0,"replyTime":"2019-01-04T10:23:15.000Z","msg":"因為無用"},{"pid":"8aa774a2bd711c4cc4846ef956c0ce9302e78b0f","tid":968548,"uid":30067,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2019-01-04T10:30:11.000Z","msg":"Let's start with what is the bit-ness of a processor.<br />\n<br />\nIf nothing else, the bit-ness of a processor refers to its ALU width. This is the width of the binary number that it can handle natively in a single operation/instruction, and/or fit within a general purpose register. In this regard, a 32-bit processor can operate directly on values which are 32 bits wide, in a single instruction. Your 128-bit processor would therefore have a large ALU capable of performing addition/subtraction/logical ops/etc. on 128 bit numbers in single instructions. Do we need that? What problem makes worth having a large and expensive ALU, and paying for? Do we have the need for executing loops with more than 264 iterations?"},{"pid":"f07908b33f7c9de85b52f21e92354c49a8d92155","tid":968548,"uid":30067,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2019-01-04T10:30:27.000Z","msg":"We have to pay for the wide ALU whether we use it, or not, or only a small fraction of its capabilities. To justify a 128 bit ALU, we have to find a problem, significant enough, that can benefit from manipulating 128 bit words in single instructions. We can probably come up a few examples, however these are already served with special purpose instruction sets (like SSE) or highly targeted processors for that purpose (e.g. DSP), and there aren't enough of such problems that make manufacturers feel they will get a return on the investment required to produce such a chip. For instance, we wouldn't put one of those chips in a fridge, a car, etc. In terms of cost, consider the wide ALU doesn't only make it more expensive, but other parts of the chip as well. A 128 bit wide ALU also means there have to be 128 bit wide data paths: that takes a lot of silicon area. Also, that data has to come from somewhere and go somewhere, so there would need to be similarly large registers, cache, other memory, etc, for the wide ALU to be used effectively."},{"pid":"021e22be6366c27123d887c6eef2d42048dea122","tid":968548,"uid":30067,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2019-01-04T10:30:41.000Z","msg":"My final point is that we can already perform arbitrary width arithmetic on any processor. We can add 32 bit memory words on a PIC 18 in 8 instructions, whereas you could do it on the same architecture scaled to 32 bits in only 2 instructions. We can perform arithmetic on arbitrarily large numbers using software libraries which can be compiled on current processors. A narrow ALU doesn't keep us from performing big computations, it only limits us in certain aspects. Your question is therefore a question of speed (mostly), and not capability. If you look at the spectrum of applications that need to use particular width numbers, I trust you will see very few that require 128 bit words. The expense of accelerating those few applications in hardware, that won't help the other set of applications, just isn't a good investment at this time."},{"pid":"13c3d4192d6c562f0c190488b29508441b7849f7","tid":968548,"uid":30067,"like":0,"dislike":0,"score":0,"quote":{"pid":"8aa774a2bd711c4cc4846ef956c0ce9302e78b0f","tid":968548,"uid":30067,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2019-01-04T10:30:11.000Z","msg":"Let's start with what is the bit-ness of a processor.<br />\n<br />\nIf nothing else, the bit-ness of a processor refers to its ALU width. This is the width of the binary number that it can handle natively in a single operation/instruction, and/or fit within a general purpose register. In this regard, a 32-bit processor can operate directly on values which are 32 bits wide, in a single instruction. Your 128-bit processor would therefore have a large ALU capable of performing addition/subtraction/logical ops/etc. on 128 bit numbers in single instructions. Do we need that? What problem makes worth having a large and expensive ALU, and paying for? Do we have the need for executing loops with more than 264 iterations?"},"citedBy":0,"replyTime":"2019-01-04T10:32:06.000Z","msg":"2^64"},{"pid":"c129a225da8b52bbfa6797e05146928dd51a419b","tid":968548,"uid":168911,"like":2,"dislike":1,"score":1,"citedBy":0,"replyTime":"2019-01-04T10:44:59.000Z","msg":"64bit個memory space已經大到傻<br />\n目前CPU運算速度，執行大部份工作都卓卓有餘, 而家主要係GPU的發展<br />\n暫時無必要再提升<br />\n<br />\n反而應該會有paradigm shift，例如quantum computing<br />\n一夜間所有encryption都無用"},{"pid":"07af3a7f4a4a342a4e98d460e247be0b02543b41","tid":968548,"uid":45252,"like":1,"dislike":1,"score":0,"quote":{"pid":"ae33cae83f3e03677cbfde80b352de6ad7a005a2","tid":968548,"uid":100680,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2019-01-04T10:21:30.000Z","msg":"10年前仲流行緊32bit cpu<br />\n而家市面上幾乎清一色64bit<br />\n咁128bit cpu理應好快就會研發到出黎<br />\n但係我睇過好多外國IT forum，什至台灣IT forum 佢地個個都話128bit起碼等多100年先有得買<br />\n其實究竟有d咩技術障礙?<img src=\"/assets/faces/xm/wonder.gif\" class=\"hkgmoji\" />"},"citedBy":0,"replyTime":"2019-01-04T11:00:00.000Z","msg":"首先你要明cpu嘅bit有咩用<br />\n然後你就會發現自己問緊on9野"}]}