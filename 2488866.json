{"tid":2488866,"cid":26,"subCid":0,"title":"到底partitioning 可唔可以加快query 速度","createTime":"2021-04-14T13:52:17.000Z","updateTime":"2021-04-14T14:34:56.000Z","uid":130565,"like":0,"dislike":0,"uniUserReply":4,"replies":[{"pid":"b8a59f8952cd42835ebf8470b9d2dd3cfb33a358","tid":2488866,"uid":130565,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-04-14T13:52:17.000Z","msg":"我DB 係用Postgresql<br />\n咁我有40億rows 既data，有以下query 會用到既columns <br />\nid - primary key<br />\nlong_text - unique<br />\nshort_code -  unique<br />\n<br />\n我係打算先用 id 做 partition, 大概咁分（1－ 999 999; 1 000 000 - 1 999 999 .....） <br />\n然後再加index 落short_code<br />\n咁做有無問題同有無更好方法？<br />\n<br />\n<br />\n另外，我又搵到有人話partitioning 唔會加快query速度，但佢講既係SQL Server 2008<br />\n<a href=\"https://stackoverflow.com/questions/4249073/partitioning-for-query-performance-in-sql-server-2008\" data-sr-url=\"https://r.lihkg.com/link?u=https%3A%2F%2Fstackoverflow.com%2Fquestions%2F4249073%2Fpartitioning-for-query-performance-in-sql-server-2008&d=t2%2FAN0mLur8%2Bj%2B1Tvbkzvr1zpTq0bGO0w7tnLPpoXkc%3D&h=afcdc2a2\" target=\"_blank\">https://stackoverflow.com/questions/4249073/partitioning-for-query-performance-in-sql-server-2008</a>"},{"pid":"f398aa66e4ebc278e064532484fd2a6a09bbca79","tid":2488866,"uid":23953,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-04-14T14:07:32.000Z","msg":"留名學野<img src=\"/assets/faces/big/adore.gif\" class=\"hkgmoji\" />"},{"pid":"7c93c8812ac59a5e520dc77edb712f4b2d6def7c","tid":2488866,"uid":9248,"like":0,"dislike":0,"score":0,"citedBy":0,"replyTime":"2021-04-14T14:15:35.000Z","msg":"利申無試過整 sharding<br />\n<br />\nSharding 嘅目的係 distribute (especially write) access 去好多部 server<br />\n（如果想speed up read，只需要用 replica，無必要 shard）<br />\n<br />\n如果你 use case 係 access by &ldquo;true&rdquo; random id<br />\n咁你咁樣 shard by id係無問題<br />\n<br />\n但 common real world problem 係 new data = more frequent access<br />\n你當連登咁<br />\n99% access 係 read latest post<br />\n咁意味所有 read access 其實都係去返同一部 server<br />\n咁即係唔會 improve到performance<br />\n<br />\n所以用 id sequential 咁 shard 係無用<br />\n<br />\n<br />\n例如之前睇 slack blog，佢哋係一個 workspace 一個 shard （你自己google 佢條link，而家好似 migrate 咗去 vitess）<br />\n如果攞連登做例子 可以一個台一個 shard<br />\n咁樣所有 post, comment, upvote, downvote 都可以落 foreign key constraint<br />\n（不過咁樣就 query 唔到 最新同熱門嘅post list，因為 d data 係 across multiple shard，所以唔係最好）"},{"pid":"f0168910257f1238f650f81c91d394c43cf75ecd","tid":2488866,"uid":147629,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-04-14T14:17:42.000Z","msg":"睇use case，啱就可以加快，例如淨係搵單一record就好似binary search咁事先知喺邊個partition可以搵少啲，寫就點解要reinvent the wheel？postgres無partitioning support？"},{"pid":"87e5d05797fa9b2cc77e9914b335a987a40fee15","tid":2488866,"uid":130565,"like":0,"dislike":0,"score":0,"quote":{"pid":"f0168910257f1238f650f81c91d394c43cf75ecd","tid":2488866,"uid":147629,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-04-14T14:17:42.000Z","msg":"睇use case，啱就可以加快，例如淨係搵單一record就好似binary search咁事先知喺邊個partition可以搵少啲，寫就點解要reinvent the wheel？postgres無partitioning support？"},"citedBy":1,"replyTime":"2021-04-14T14:30:02.000Z","msg":"我知有，就係好奇點解有人會話<br />\n<blockquote>Partitioning is never done for query performance. With partitioning the performance will always be worse, the best you can hope for is no big regression, but never improvement.</blockquote>"},{"pid":"cd7b7bd8584241909a6c964b5e678bd546a7eb3c","tid":2488866,"uid":147629,"like":0,"dislike":0,"score":0,"quote":{"pid":"87e5d05797fa9b2cc77e9914b335a987a40fee15","tid":2488866,"uid":130565,"like":0,"dislike":0,"score":0,"quote":{"pid":"f0168910257f1238f650f81c91d394c43cf75ecd","tid":2488866,"uid":147629,"like":0,"dislike":0,"score":0,"citedBy":1,"replyTime":"2021-04-14T14:17:42.000Z","msg":"睇use case，啱就可以加快，例如淨係搵單一record就好似binary search咁事先知喺邊個partition可以搵少啲，寫就點解要reinvent the wheel？postgres無partitioning support？"},"citedBy":1,"replyTime":"2021-04-14T14:30:02.000Z","msg":"我知有，就係好奇點解有人會話<br />\n<blockquote>Partitioning is never done for query performance. With partitioning the performance will always be worse, the best you can hope for is no big regression, but never improvement.</blockquote>"},"citedBy":0,"replyTime":"2021-04-14T14:34:56.000Z","msg":"佢講緊同index比而唔係portioning同乜都無比"}]}